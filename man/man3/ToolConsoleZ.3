.TH "ToolConsoleZ" 3 "Version 2025.8.29" "Bearsampp" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ToolConsoleZ
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBModule\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fB__construct\fP ($id, $type)"
.br
.ti -1c
.RI "\fBgetCols\fP ()"
.br
.ti -1c
.RI "\fBgetConf\fP ()"
.br
.ti -1c
.RI "\fBgetExe\fP ()"
.br
.ti -1c
.RI "\fBgetLaunchExe\fP ()"
.br
.ti -1c
.RI "\fBgetRows\fP ()"
.br
.ti -1c
.RI "\fBgetShell\fP ($args=null)"
.br
.ti -1c
.RI "\fBgetTabTitleComposer\fP ()"
.br
.ti -1c
.RI "\fBgetTabTitleDefault\fP ()"
.br
.ti -1c
.RI "\fBgetTabTitleGhostscript\fP ()"
.br
.ti -1c
.RI "\fBgetTabTitleGit\fP ($repoPath=null)"
.br
.ti -1c
.RI "\fBgetTabTitleMariadb\fP ()"
.br
.ti -1c
.RI "\fBgetTabTitleMysql\fP ()"
.br
.ti -1c
.RI "\fBgetTabTitleNgrok\fP ()"
.br
.ti -1c
.RI "\fBgetTabTitleNodejs\fP ()"
.br
.ti -1c
.RI "\fBgetTabTitlePear\fP ()"
.br
.ti -1c
.RI "\fBgetTabTitlePerl\fP ()"
.br
.ti -1c
.RI "\fBgetTabTitlePostgresql\fP ()"
.br
.ti -1c
.RI "\fBgetTabTitlePowershell\fP ()"
.br
.ti -1c
.RI "\fBgetTabTitlePython\fP ()"
.br
.ti -1c
.RI "\fBgetTabTitleRuby\fP ()"
.br
.ti -1c
.RI "\fBreload\fP ($id=null, $type=null)"
.br
.ti -1c
.RI "\fBsetVersion\fP ($version)"
.br
.in -1c

Public Member Functions inherited from \fBModule\fP
.in +1c
.ti -1c
.RI "\fB__toString\fP ()"
.br
.ti -1c
.RI "\fBgetCurrentPath\fP ()"
.br
.ti -1c
.RI "\fBgetId\fP ()"
.br
.ti -1c
.RI "\fBgetName\fP ()"
.br
.ti -1c
.RI "\fBgetRelease\fP ()"
.br
.ti -1c
.RI "\fBgetRootPath\fP ()"
.br
.ti -1c
.RI "\fBgetSymlinkPath\fP ()"
.br
.ti -1c
.RI "\fBgetType\fP ()"
.br
.ti -1c
.RI "\fBgetVersion\fP ()"
.br
.ti -1c
.RI "\fBgetVersionList\fP ()"
.br
.ti -1c
.RI "\fBisEnable\fP ()"
.br
.ti -1c
.RI "\fBupdate\fP ($sub=0, $showWindow=false)"
.br
.in -1c
.SS "Data Fields"

.in +1c
.ti -1c
.RI "const \fBLOCAL_CFG_COLS\fP = 'consolezCols'"
.br
.ti -1c
.RI "const \fBLOCAL_CFG_CONF\fP = 'consolezConf'"
.br
.ti -1c
.RI "const \fBLOCAL_CFG_EXE\fP = 'consolezExe'"
.br
.ti -1c
.RI "const \fBLOCAL_CFG_LAUNCH_EXE\fP = 'consolezLaunchExe'"
.br
.ti -1c
.RI "const \fBLOCAL_CFG_ROWS\fP = 'consolezRows'"
.br
.ti -1c
.RI "const \fBROOT_CFG_VERSION\fP = 'consolezVersion'"
.br
.in -1c

Data Fields inherited from \fBModule\fP
.in +1c
.ti -1c
.RI "const \fBBUNDLE_RELEASE\fP = 'bundleRelease'"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fB$cols\fP"
.br
.ti -1c
.RI "\fB$conf\fP"
.br
.ti -1c
.RI "\fB$exe\fP"
.br
.ti -1c
.RI "\fB$launchExe\fP"
.br
.ti -1c
.RI "\fB$rows\fP"
.br
.in -1c
.SS "Additional Inherited Members"


Protected Member Functions inherited from \fBModule\fP
.in +1c
.ti -1c
.RI "\fB__construct\fP ()"
.br
.ti -1c
.RI "\fBreplace\fP ($key, $value)"
.br
.ti -1c
.RI "\fBreplaceAll\fP ($params)"
.br
.ti -1c
.RI "\fBupdateConfig\fP ($version=null, $sub=0, $showWindow=false)"
.br
.in -1c

Protected Attributes inherited from \fBModule\fP
.in +1c
.ti -1c
.RI "\fB$bearsamppConf\fP"
.br
.ti -1c
.RI "\fB$bearsamppConfRaw\fP"
.br
.ti -1c
.RI "\fB$currentPath\fP"
.br
.ti -1c
.RI "\fB$enable\fP"
.br
.ti -1c
.RI "\fB$name\fP"
.br
.ti -1c
.RI "\fB$release\fP = 'N/A'"
.br
.ti -1c
.RI "\fB$rootPath\fP"
.br
.ti -1c
.RI "\fB$symlinkPath\fP"
.br
.ti -1c
.RI "\fB$version\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Class \fBToolConsoleZ\fP

.PP
This class represents the ConsoleZ tool in the \fBBearsampp\fP application\&. It extends the \fBModule\fP class and provides functionalities specific to ConsoleZ\&. 
.PP
Definition at line \fB16\fP of file \fBclass\&.tool\&.consolez\&.php\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "__construct ( $id,  $type)"
Constructor for the \fBToolConsoleZ\fP class\&.

.PP
\fBParameters\fP
.RS 4
\fI$id\fP The ID of the module\&. 
.br
\fI$type\fP The type of the module\&. 
.RE
.PP

.PP
Definition at line \fB38\fP of file \fBclass\&.tool\&.consolez\&.php\fP\&.
.nf
38                                             {
39         Util::logInitClass($this);
40         $this\->reload($id, $type);
41     }
.PP
.fi

.PP
References \fBModule\\$id\fP, \fBModule\\$type\fP, \fBUtil\\logInitClass()\fP, and \fBreload()\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "getCols ()"
Gets the number of columns for the ConsoleZ window\&.

.PP
\fBReturns\fP
.RS 4
int The number of columns\&. 
.RE
.PP

.PP
Definition at line \fB149\fP of file \fBclass\&.tool\&.consolez\&.php\fP\&.
.nf
149                               {
150         return $this\->cols;
151     }
.PP
.fi

.PP
References \fB$cols\fP\&.
.SS "getConf ()"
Gets the configuration file path for ConsoleZ\&.

.PP
\fBReturns\fP
.RS 4
string The configuration file path\&. 
.RE
.PP

.PP
Definition at line \fB131\fP of file \fBclass\&.tool\&.consolez\&.php\fP\&.
.nf
131                               {
132         return $this\->conf;
133     }
.PP
.fi

.PP
References \fB$conf\fP\&.
.SS "getExe ()"
Gets the executable path for ConsoleZ\&.

.PP
\fBReturns\fP
.RS 4
string The executable path\&. 
.RE
.PP

.PP
Definition at line \fB113\fP of file \fBclass\&.tool\&.consolez\&.php\fP\&.
.nf
113                              {
114         return $this\->exe;
115     }
.PP
.fi

.PP
References \fB$exe\fP\&.
.SS "getLaunchExe ()"
Gets the launch executable path for ConsoleZ\&.

.PP
\fBReturns\fP
.RS 4
string The launch executable path\&. 
.RE
.PP

.PP
Definition at line \fB122\fP of file \fBclass\&.tool\&.consolez\&.php\fP\&.
.nf
122                                    {
123         return $this\->launchExe;
124     }
.PP
.fi

.PP
References \fB$launchExe\fP\&.
.PP
Referenced by \fBgetShell()\fP\&.
.SS "getRows ()"
Gets the number of rows for the ConsoleZ window\&.

.PP
\fBReturns\fP
.RS 4
int The number of rows\&. 
.RE
.PP

.PP
Definition at line \fB140\fP of file \fBclass\&.tool\&.consolez\&.php\fP\&.
.nf
140                               {
141         return $this\->rows;
142     }
.PP
.fi

.PP
References \fB$rows\fP\&.
.SS "getShell ( $args = \fRnull\fP)"
Gets the shell command to launch ConsoleZ\&.

.PP
\fBParameters\fP
.RS 4
\fI$args\fP Additional arguments for the shell command\&. 
.RE
.PP
\fBReturns\fP
.RS 4
string The shell command\&. 
.RE
.PP

.PP
Definition at line \fB159\fP of file \fBclass\&.tool\&.consolez\&.php\fP\&.
.nf
159                                            {
160         if (empty($args)) {
161             return 'cmd /k &quot;' \&. Util::formatWindowsPath($this\->launchExe) \&. '&quot;';
162         } else {
163             return 'cmd /k &quot;&quot;' \&. Util::formatWindowsPath($this\->getLaunchExe()) \&. '&quot; &amp; ' \&. Util::formatWindowsPath($args) \&. '&quot;';
164         }
165     }
.PP
.fi

.PP
References \fBUtil\\formatWindowsPath()\fP, and \fBgetLaunchExe()\fP\&.
.SS "getTabTitleComposer ()"
Gets the tab title for Composer\&.

.PP
\fBReturns\fP
.RS 4
string The tab title for Composer\&. 
.RE
.PP

.PP
Definition at line \fB256\fP of file \fBclass\&.tool\&.consolez\&.php\fP\&.
.nf
256                                           {
257         global $bearsamppLang, $bearsamppTools;
258         return $bearsamppLang\->getValue(Lang::COMPOSER) \&. ' ' \&. $bearsamppTools\->getComposer()\->getVersion();
259     }
.PP
.fi

.PP
References \fB$bearsamppLang\fP, and \fBLang\\COMPOSER\fP\&.
.SS "getTabTitleDefault ()"
Gets the default tab title for ConsoleZ\&.

.PP
\fBReturns\fP
.RS 4
string The default tab title\&. 
.RE
.PP

.PP
Definition at line \fB172\fP of file \fBclass\&.tool\&.consolez\&.php\fP\&.
.nf
172                                          {
173         global $bearsamppLang;
174         return $bearsamppLang\->getValue(Lang::CONSOLE);
175     }
.PP
.fi

.PP
References \fB$bearsamppLang\fP, and \fBLang\\CONSOLE\fP\&.
.SS "getTabTitleGhostscript ()"
Gets the tab title for Ghostscript\&.

.PP
\fBReturns\fP
.RS 4
string The tab title for Ghostscript\&. 
.RE
.PP

.PP
Definition at line \fB296\fP of file \fBclass\&.tool\&.consolez\&.php\fP\&.
.nf
296                                              {
297         global $bearsamppLang, $bearsamppTools;
298         return $bearsamppLang\->getValue(Lang::GHOSTSCRIPT) \&. ' ' \&. $bearsamppTools\->getGhostscript()\->getVersion();
299     }
.PP
.fi

.PP
References \fB$bearsamppLang\fP, and \fBLang\\GHOSTSCRIPT\fP\&.
.SS "getTabTitleGit ( $repoPath = \fRnull\fP)"
Gets the tab title for Git\&.

.PP
\fBParameters\fP
.RS 4
\fI$repoPath\fP The repository path\&. 
.RE
.PP
\fBReturns\fP
.RS 4
string The tab title for Git\&. 
.RE
.PP

.PP
Definition at line \fB232\fP of file \fBclass\&.tool\&.consolez\&.php\fP\&.
.nf
232                                                      {
233         global $bearsamppLang, $bearsamppTools;
234         $result = $bearsamppLang\->getValue(Lang::GIT) \&. ' ' \&. $bearsamppTools\->getGit()\->getVersion();
235         if ($repoPath != null) {
236             $result \&.= ' \- ' \&. basename($repoPath);
237         }
238         return $result;
239     }
.PP
.fi

.PP
References \fB$bearsamppLang\fP, \fB$result\fP, and \fBLang\\GIT\fP\&.
.SS "getTabTitleMariadb ()"
Gets the tab title for MariaDB\&.

.PP
\fBReturns\fP
.RS 4
string The tab title for MariaDB\&. 
.RE
.PP

.PP
Definition at line \fB211\fP of file \fBclass\&.tool\&.consolez\&.php\fP\&.
.nf
211                                          {
212         global $bearsamppLang, $bearsamppBins;
213         return $bearsamppLang\->getValue(Lang::MARIADB) \&. ' ' \&. $bearsamppBins\->getMariadb()\->getVersion();
214     }
.PP
.fi

.PP
References \fB$bearsamppBins\fP, \fB$bearsamppLang\fP, and \fBLang\\MARIADB\fP\&.
.SS "getTabTitleMysql ()"
Gets the tab title for MySQL\&.

.PP
\fBReturns\fP
.RS 4
string The tab title for MySQL\&. 
.RE
.PP

.PP
Definition at line \fB201\fP of file \fBclass\&.tool\&.consolez\&.php\fP\&.
.nf
201                                        {
202         global $bearsamppLang, $bearsamppBins;
203         return $bearsamppLang\->getValue(Lang::MYSQL) \&. ' ' \&. $bearsamppBins\->getMysql()\->getVersion();
204     }
.PP
.fi

.PP
References \fB$bearsamppBins\fP, \fB$bearsamppLang\fP, and \fBLang\\MYSQL\fP\&.
.SS "getTabTitleNgrok ()"
Gets the tab title for Ngrok\&.

.PP
\fBReturns\fP
.RS 4
string The tab title for Ngrok\&. 
.RE
.PP

.PP
Definition at line \fB306\fP of file \fBclass\&.tool\&.consolez\&.php\fP\&.
.nf
306                                        {
307         global $bearsamppLang, $bearsamppTools;
308         return $bearsamppLang\->getValue(Lang::NGROK) \&. ' ' \&. $bearsamppTools\->getNgrok()\->getVersion();
309     }
.PP
.fi

.PP
References \fB$bearsamppLang\fP, and \fBLang\\NGROK\fP\&.
.SS "getTabTitleNodejs ()"
Gets the tab title for Node\&.js\&.

.PP
\fBReturns\fP
.RS 4
string The tab title for Node\&.js\&. 
.RE
.PP

.PP
Definition at line \fB246\fP of file \fBclass\&.tool\&.consolez\&.php\fP\&.
.nf
246                                         {
247         global $bearsamppLang, $bearsamppBins;
248         return $bearsamppLang\->getValue(Lang::NODEJS) \&. ' ' \&. $bearsamppBins\->getNodejs()\->getVersion();
249     }
.PP
.fi

.PP
References \fB$bearsamppBins\fP, \fB$bearsamppLang\fP, and \fBLang\\NODEJS\fP\&.
.SS "getTabTitlePear ()"
Gets the tab title for PEAR\&.

.PP
\fBReturns\fP
.RS 4
string The tab title for PEAR\&. 
.RE
.PP

.PP
Definition at line \fB191\fP of file \fBclass\&.tool\&.consolez\&.php\fP\&.
.nf
191                                       {
192         global $bearsamppLang, $bearsamppBins;
193         return $bearsamppLang\->getValue(Lang::PEAR) \&. ' ' \&. $bearsamppBins\->getPhp()\->getPearVersion(true);
194     }
.PP
.fi

.PP
References \fB$bearsamppBins\fP, \fB$bearsamppLang\fP, and \fBLang\\PEAR\fP\&.
.SS "getTabTitlePerl ()"
Gets the tab title for Perl\&.

.PP
\fBReturns\fP
.RS 4
string The tab title for Perl\&. 
.RE
.PP

.PP
Definition at line \fB286\fP of file \fBclass\&.tool\&.consolez\&.php\fP\&.
.nf
286                                       {
287         global $bearsamppLang, $bearsamppTools;
288         return $bearsamppLang\->getValue(Lang::PERL) \&. ' ' \&. $bearsamppTools\->getPerl()\->getVersion();
289     }
.PP
.fi

.PP
References \fB$bearsamppLang\fP, and \fBLang\\PERL\fP\&.
.SS "getTabTitlePostgresql ()"
Gets the tab title for PostgreSQL\&.

.PP
\fBReturns\fP
.RS 4
string The tab title for PostgreSQL\&. 
.RE
.PP

.PP
Definition at line \fB221\fP of file \fBclass\&.tool\&.consolez\&.php\fP\&.
.nf
221                                             {
222         global $bearsamppLang, $bearsamppBins;
223         return $bearsamppLang\->getValue(Lang::POSTGRESQL) \&. ' ' \&. $bearsamppBins\->getPostgresql()\->getVersion();
224     }
.PP
.fi

.PP
References \fB$bearsamppBins\fP, \fB$bearsamppLang\fP, and \fBLang\\POSTGRESQL\fP\&.
.SS "getTabTitlePowershell ()"
Gets the tab title for PowerShell\&.

.PP
\fBReturns\fP
.RS 4
string The tab title for PowerShell\&. 
.RE
.PP

.PP
Definition at line \fB182\fP of file \fBclass\&.tool\&.consolez\&.php\fP\&.
.nf
182                                             {
183         return 'PowerShell';
184     }
.PP
.fi

.SS "getTabTitlePython ()"
Gets the tab title for Python\&.

.PP
\fBReturns\fP
.RS 4
string The tab title for Python\&. 
.RE
.PP

.PP
Definition at line \fB266\fP of file \fBclass\&.tool\&.consolez\&.php\fP\&.
.nf
266                                         {
267         global $bearsamppLang, $bearsamppTools;
268         return $bearsamppLang\->getValue(Lang::PYTHON) \&. ' ' \&. $bearsamppTools\->getPython()\->getVersion();
269     }
.PP
.fi

.PP
References \fB$bearsamppLang\fP, and \fBLang\\PYTHON\fP\&.
.SS "getTabTitleRuby ()"
Gets the tab title for Ruby\&.

.PP
\fBReturns\fP
.RS 4
string The tab title for Ruby\&. 
.RE
.PP

.PP
Definition at line \fB276\fP of file \fBclass\&.tool\&.consolez\&.php\fP\&.
.nf
276                                       {
277         global $bearsamppLang, $bearsamppTools;
278         return $bearsamppLang\->getValue(Lang::RUBY) \&. ' ' \&. $bearsamppTools\->getRuby()\->getVersion();
279     }
.PP
.fi

.PP
References \fB$bearsamppLang\fP, and \fBLang\\RUBY\fP\&.
.SS "reload ( $id = \fRnull\fP,  $type = \fRnull\fP)"
Reloads the configuration for the ConsoleZ tool\&.

.PP
\fBParameters\fP
.RS 4
\fI$id\fP The ID of the module\&. If null, the current ID is used\&. 
.br
\fI$type\fP The type of the module\&. If null, the current type is used\&. 
.RE
.PP

.PP
Reimplemented from \fBModule\fP\&.
.PP
Definition at line \fB49\fP of file \fBclass\&.tool\&.consolez\&.php\fP\&.
.nf
49                                                      {
50         global $bearsamppConfig, $bearsamppLang;
51         Util::logReloadClass($this);
52 
53         $this\->name = $bearsamppLang\->getValue(Lang::CONSOLEZ);
54         $this\->version = $bearsamppConfig\->getRaw(self::ROOT_CFG_VERSION);
55         parent::reload($id, $type);
56 
57         if ($this\->bearsamppConfRaw !== false) {
58             $this\->exe = $this\->symlinkPath \&. '/' \&. $this\->bearsamppConfRaw[self::LOCAL_CFG_EXE];
59             $this\->launchExe = $this\->symlinkPath \&. '/' \&. $this\->bearsamppConfRaw[self::LOCAL_CFG_LAUNCH_EXE];
60             $this\->conf = $this\->symlinkPath \&. '/' \&. $this\->bearsamppConfRaw[self::LOCAL_CFG_CONF];
61             $this\->rows = intval($this\->bearsamppConfRaw[self::LOCAL_CFG_ROWS]);
62             $this\->cols = intval($this\->bearsamppConfRaw[self::LOCAL_CFG_COLS]);
63         }
64 
65         if (!$this\->enable) {
66             Util::logInfo($this\->name \&. ' is not enabled!');
67             return;
68         }
69         if (!is_dir($this\->currentPath)) {
70             Util::logError(sprintf($bearsamppLang\->getValue(Lang::ERROR_FILE_NOT_FOUND), $this\->name \&. ' ' \&. $this\->version, $this\->currentPath));
71         }
72         if (!is_dir($this\->symlinkPath)) {
73             Util::logError(sprintf($bearsamppLang\->getValue(Lang::ERROR_FILE_NOT_FOUND), $this\->name \&. ' ' \&. $this\->version, $this\->symlinkPath));
74             return;
75         }
76         if (!is_file($this\->bearsamppConf)) {
77             Util::logError(sprintf($bearsamppLang\->getValue(Lang::ERROR_CONF_NOT_FOUND), $this\->name \&. ' ' \&. $this\->version, $this\->bearsamppConf));
78         }
79         if (!is_file($this\->exe)) {
80             Util::logError(sprintf($bearsamppLang\->getValue(Lang::ERROR_EXE_NOT_FOUND), $this\->name \&. ' ' \&. $this\->version, $this\->exe));
81         }
82         if (!is_file($this\->launchExe)) {
83             Util::logError(sprintf($bearsamppLang\->getValue(Lang::ERROR_EXE_NOT_FOUND), $this\->name \&. ' ' \&. $this\->version, $this\->launchExe));
84         }
85         if (!is_file($this\->conf)) {
86             Util::logError(sprintf($bearsamppLang\->getValue(Lang::ERROR_CONF_NOT_FOUND), $this\->name \&. ' ' \&. $this\->version, $this\->conf));
87         }
88         if (!is_numeric($this\->rows) || $this\->rows <= 0) {
89             Util::logError(sprintf($bearsamppLang\->getValue(Lang::ERROR_INVALID_PARAMETER), self::LOCAL_CFG_ROWS, $this\->rows));
90         }
91         if (!is_numeric($this\->cols) || $this\->cols <= 0) {
92             Util::logError(sprintf($bearsamppLang\->getValue(Lang::ERROR_INVALID_PARAMETER), self::LOCAL_CFG_COLS, $this\->cols));
93         }
94     }
.PP
.fi

.PP
References \fB$bearsamppConfig\fP, \fB$bearsamppLang\fP, \fBModule\\$id\fP, \fBModule\\$type\fP, \fBLang\\CONSOLEZ\fP, \fBLang\\ERROR_CONF_NOT_FOUND\fP, \fBLang\\ERROR_EXE_NOT_FOUND\fP, \fBLang\\ERROR_FILE_NOT_FOUND\fP, \fBLang\\ERROR_INVALID_PARAMETER\fP, \fBUtil\\logError()\fP, \fBUtil\\logInfo()\fP, and \fBUtil\\logReloadClass()\fP\&.
.PP
Referenced by \fB__construct()\fP, and \fBsetVersion()\fP\&.
.SS "setVersion ( $version)"
Sets the version of the ConsoleZ tool\&.

.PP
\fBParameters\fP
.RS 4
\fI$version\fP The version to set\&. 
.RE
.PP

.PP
Reimplemented from \fBModule\fP\&.
.PP
Definition at line \fB101\fP of file \fBclass\&.tool\&.consolez\&.php\fP\&.
.nf
101                                          {
102         global $bearsamppConfig;
103         $this\->version = $version;
104         $bearsamppConfig\->replace(self::ROOT_CFG_VERSION, $version);
105         $this\->reload();
106     }
.PP
.fi

.PP
References \fB$bearsamppConfig\fP, \fBModule\\$version\fP, and \fBreload()\fP\&.
.SH "Field Documentation"
.PP 
.SS "$cols\fR [private]\fP"

.PP
Definition at line \fB30\fP of file \fBclass\&.tool\&.consolez\&.php\fP\&.
.PP
Referenced by \fBgetCols()\fP\&.
.SS "$conf\fR [private]\fP"

.PP
Definition at line \fB28\fP of file \fBclass\&.tool\&.consolez\&.php\fP\&.
.PP
Referenced by \fBgetConf()\fP\&.
.SS "$exe\fR [private]\fP"

.PP
Definition at line \fB26\fP of file \fBclass\&.tool\&.consolez\&.php\fP\&.
.PP
Referenced by \fBgetExe()\fP\&.
.SS "$launchExe\fR [private]\fP"

.PP
Definition at line \fB27\fP of file \fBclass\&.tool\&.consolez\&.php\fP\&.
.PP
Referenced by \fBgetLaunchExe()\fP\&.
.SS "$rows\fR [private]\fP"

.PP
Definition at line \fB29\fP of file \fBclass\&.tool\&.consolez\&.php\fP\&.
.PP
Referenced by \fBgetRows()\fP\&.
.SS "const LOCAL_CFG_COLS = 'consolezCols'"

.PP
Definition at line \fB24\fP of file \fBclass\&.tool\&.consolez\&.php\fP\&.
.SS "const LOCAL_CFG_CONF = 'consolezConf'"

.PP
Definition at line \fB21\fP of file \fBclass\&.tool\&.consolez\&.php\fP\&.
.SS "const LOCAL_CFG_EXE = 'consolezExe'"

.PP
Definition at line \fB20\fP of file \fBclass\&.tool\&.consolez\&.php\fP\&.
.SS "const LOCAL_CFG_LAUNCH_EXE = 'consolezLaunchExe'"

.PP
Definition at line \fB22\fP of file \fBclass\&.tool\&.consolez\&.php\fP\&.
.SS "const LOCAL_CFG_ROWS = 'consolezRows'"

.PP
Definition at line \fB23\fP of file \fBclass\&.tool\&.consolez\&.php\fP\&.
.SS "const ROOT_CFG_VERSION = 'consolezVersion'"

.PP
Definition at line \fB18\fP of file \fBclass\&.tool\&.consolez\&.php\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Bearsampp from the source code\&.
