.TH "Autoloader" 3 "Version 2025.8.29" "Bearsampp" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Autoloader
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fB__construct\fP ()"
.br
.ti -1c
.RI "\fBload\fP ($class)"
.br
.ti -1c
.RI "\fBregister\fP ()"
.br
.ti -1c
.RI "\fBunregister\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
Class \fBAutoloader\fP

.PP
This class handles the autoloading of classes within the \fBBearsampp\fP application\&. It registers itself with the SPL autoload stack and loads classes based on naming conventions\&. 
.PP
Definition at line \fB16\fP of file \fBclass\&.autoloader\&.php\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "__construct ()"
\fBAutoloader\fP constructor\&.

.PP
Initializes the \fBAutoloader\fP object\&. 
.PP
Definition at line \fB23\fP of file \fBclass\&.autoloader\&.php\fP\&.
.nf
24     {
25     }
.PP
.fi

.SH "Member Function Documentation"
.PP 
.SS "load ( $class)"
Loads the specified class file based on the class name\&.

.PP
\fBParameters\fP
.RS 4
\fI$class\fP The name of the class to load\&. 
.RE
.PP
\fBReturns\fP
.RS 4
bool True if the class file was successfully loaded, false otherwise\&. 
.RE
.PP

.PP
Definition at line \fB33\fP of file \fBclass\&.autoloader\&.php\fP\&.
.nf
34     {
35         global $bearsamppRoot;
36 
37         $class = strtolower($class);
38         $rootPath = $bearsamppRoot\->getCorePath();
39 
40         $file = $rootPath \&. '/classes/class\&.' \&. $class \&. '\&.php';
41         if (Util::startWith($class, 'bin')) {
42             $class = $class != 'bins' ? substr_replace($class, '\&.', 3, 0) : $class;
43             $file = $rootPath \&. '/classes/bins/class\&.' \&. $class \&. '\&.php';
44         } elseif (Util::startWith($class, 'tool')) {
45             $class = $class != 'tools' ? substr_replace($class, '\&.', 4, 0) : $class;
46             $file = $rootPath \&. '/classes/tools/class\&.' \&. $class \&. '\&.php';
47         } elseif (Util::startWith($class, 'app')) {
48             $class = $class != 'apps' ? substr_replace($class, '\&.', 3, 0) : $class;
49             $file = $rootPath \&. '/classes/apps/class\&.' \&. $class \&. '\&.php';
50         } elseif (Util::startWith($class, 'action')) {
51             $class = $class != 'action' ? substr_replace($class, '\&.', 6, 0) : $class;
52             $file = $rootPath \&. '/classes/actions/class\&.' \&. $class \&. '\&.php';
53         } elseif (Util::startWith($class, 'tplapp') && $class != 'tplapp') {
54             $class = substr_replace(substr_replace($class, '\&.', 3, 0), '\&.', 7, 0);
55             $file = $rootPath \&. '/classes/tpls/app/class\&.' \&. $class \&. '\&.php';
56         } elseif (Util::startWith($class, 'tpl')) {
57             $class = $class != 'tpls' ? substr_replace($class, '\&.', 3, 0) : $class;
58             $file = $rootPath \&. '/classes/tpls/class\&.' \&. $class \&. '\&.php';
59         }
60 
61         if (!file_exists($file)) {
62             return false;
63         }
64 
65         require_once $file;
66         return true;
67     }
.PP
.fi

.PP
References \fB$bearsamppRoot\fP, and \fBUtil\\startWith()\fP\&.
.SS "register ()"
Registers the autoloader with the SPL autoload stack\&.

.PP
\fBReturns\fP
.RS 4
bool True on success, false on failure\&. 
.RE
.PP

.PP
Definition at line \fB74\fP of file \fBclass\&.autoloader\&.php\fP\&.
.nf
75     {
76         return spl_autoload_register(array($this, 'load'));
77     }
.PP
.fi

.SS "unregister ()"
Unregisters the autoloader from the SPL autoload stack\&.

.PP
\fBReturns\fP
.RS 4
bool True on success, false on failure\&. 
.RE
.PP

.PP
Definition at line \fB84\fP of file \fBclass\&.autoloader\&.php\fP\&.
.nf
85     {
86         return spl_autoload_unregister(array($this, 'load'));
87     }
.PP
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for Bearsampp from the source code\&.
