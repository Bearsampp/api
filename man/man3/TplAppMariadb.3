.TH "TplAppMariadb" 3 "Version 2025.8.29" "Bearsampp" \" -*- nroff -*-
.ad l
.nh
.SH NAME
TplAppMariadb
.SH SYNOPSIS
.br
.PP
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBgetActionChangeMariadbPort\fP ()"
.br
.ti -1c
.RI "static \fBgetActionChangeMariadbRootPwd\fP ()"
.br
.ti -1c
.RI "static \fBgetActionEnableMariadb\fP ($enable)"
.br
.ti -1c
.RI "static \fBgetActionInstallMariadbService\fP ()"
.br
.ti -1c
.RI "static \fBgetActionRemoveMariadbService\fP ()"
.br
.ti -1c
.RI "static \fBgetActionSwitchMariadbVersion\fP ($version)"
.br
.ti -1c
.RI "static \fBgetMenuMariadb\fP ()"
.br
.ti -1c
.RI "static \fBgetMenuMariadbDebug\fP ()"
.br
.ti -1c
.RI "static \fBgetMenuMariadbService\fP ()"
.br
.ti -1c
.RI "static \fBgetMenuMariadbVersions\fP ()"
.br
.ti -1c
.RI "static \fBprocess\fP ()"
.br
.in -1c
.SS "Data Fields"

.in +1c
.ti -1c
.RI "const \fBACTION_CHANGE_PORT\fP = 'changeMariadbPort'"
.br
.ti -1c
.RI "const \fBACTION_CHANGE_ROOT_PWD\fP = 'changeMariadbRootPwd'"
.br
.ti -1c
.RI "const \fBACTION_ENABLE\fP = 'enableMariadb'"
.br
.ti -1c
.RI "const \fBACTION_INSTALL_SERVICE\fP = 'installMariadbService'"
.br
.ti -1c
.RI "const \fBACTION_REMOVE_SERVICE\fP = 'removeMariadbService'"
.br
.ti -1c
.RI "const \fBACTION_SWITCH_VERSION\fP = 'switchMariadbVersion'"
.br
.ti -1c
.RI "const \fBMENU\fP = 'mariadb'"
.br
.ti -1c
.RI "const \fBMENU_DEBUG\fP = 'mariadbDebug'"
.br
.ti -1c
.RI "const \fBMENU_SERVICE\fP = 'mariadbService'"
.br
.ti -1c
.RI "const \fBMENU_VERSIONS\fP = 'mariadbVersions'"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line \fB10\fP of file \fBclass\&.tpl\&.app\&.mariadb\&.php\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "getActionChangeMariadbPort ()\fR [static]\fP"
Generates the action to change the MariaDB port\&.

.PP
This method creates the action string for changing the MariaDB port\&. It uses the global binaries object to retrieve the necessary values\&.

.PP
@global object $bearsamppBins Provides access to system binaries and their configurations\&.

.PP
\fBReturns\fP
.RS 4
string The generated action string for changing the MariaDB port\&. 
.RE
.PP

.PP
Definition at line \fB295\fP of file \fBclass\&.tpl\&.app\&.mariadb\&.php\fP\&.
.nf
296     {
297         global $bearsamppBins;
298 
299         return TplApp::getActionRun(Action::CHANGE_PORT, array($bearsamppBins\->getMariadb()\->getName())) \&. PHP_EOL \&.
300             TplAppReload::getActionReload();
301     }
.PP
.fi

.PP
References \fB$bearsamppBins\fP, \fBAction\\CHANGE_PORT\fP, \fBTplAppReload\\getActionReload()\fP, and \fBTplApp\\getActionRun()\fP\&.
.SS "getActionChangeMariadbRootPwd ()\fR [static]\fP"
Generates the action to change the MariaDB root password\&.

.PP
This method creates the action string for changing the MariaDB root password\&. It uses the global binaries object to retrieve the necessary values\&.

.PP
@global object $bearsamppBins Provides access to system binaries and their configurations\&.

.PP
\fBReturns\fP
.RS 4
string The generated action string for changing the MariaDB root password\&. 
.RE
.PP

.PP
Definition at line \fB313\fP of file \fBclass\&.tpl\&.app\&.mariadb\&.php\fP\&.
.nf
314     {
315         global $bearsamppBins;
316 
317         return TplApp::getActionRun(Action::CHANGE_DB_ROOT_PWD, array($bearsamppBins\->getMariadb()\->getName())) \&. PHP_EOL \&.
318             TplAppReload::getActionReload();
319     }
.PP
.fi

.PP
References \fB$bearsamppBins\fP, \fBAction\\CHANGE_DB_ROOT_PWD\fP, \fBTplAppReload\\getActionReload()\fP, and \fBTplApp\\getActionRun()\fP\&.
.SS "getActionEnableMariadb ( $enable)\fR [static]\fP"
Generates the action to enable or disable MariaDB\&.

.PP
This method creates the action string for enabling or disabling MariaDB\&. It uses the global binaries object to retrieve the necessary values\&.

.PP
@global object $bearsamppBins Provides access to system binaries and their configurations\&.

.PP
\fBParameters\fP
.RS 4
\fI$enable\fP The enable flag (1 for enable, 0 for disable)\&.
.RE
.PP
\fBReturns\fP
.RS 4
string The generated action string for enabling or disabling MariaDB\&. 
.RE
.PP

.PP
Definition at line \fB158\fP of file \fBclass\&.tpl\&.app\&.mariadb\&.php\fP\&.
.nf
159     {
160         global $bearsamppBins;
161 
162         return TplApp::getActionRun(Action::ENABLE, array($bearsamppBins\->getMariadb()\->getName(), $enable)) \&. PHP_EOL \&.
163             TplAppReload::getActionReload();
164     }
.PP
.fi

.PP
References \fB$bearsamppBins\fP, \fBAction\\ENABLE\fP, \fBTplAppReload\\getActionReload()\fP, and \fBTplApp\\getActionRun()\fP\&.
.SS "getActionInstallMariadbService ()\fR [static]\fP"
Generates the action to install the MariaDB service\&.

.PP
This method creates the action string for installing the MariaDB service\&.

.PP
\fBReturns\fP
.RS 4
string The generated action string for installing the MariaDB service\&. 
.RE
.PP

.PP
Definition at line \fB328\fP of file \fBclass\&.tpl\&.app\&.mariadb\&.php\fP\&.
.nf
329     {
330         return TplApp::getActionRun(Action::SERVICE, array(BinMariadb::SERVICE_NAME, ActionService::INSTALL)) \&. PHP_EOL \&.
331             TplAppReload::getActionReload();
332     }
.PP
.fi

.PP
References \fBTplAppReload\\getActionReload()\fP, \fBTplApp\\getActionRun()\fP, \fBActionService\\INSTALL\fP, \fBAction\\SERVICE\fP, and \fBBinMariadb\\SERVICE_NAME\fP\&.
.SS "getActionRemoveMariadbService ()\fR [static]\fP"
Generates the action to remove the MariaDB service\&.

.PP
This method creates the action string for removing the MariaDB service\&.

.PP
\fBReturns\fP
.RS 4
string The generated action string for removing the MariaDB service\&. 
.RE
.PP

.PP
Definition at line \fB341\fP of file \fBclass\&.tpl\&.app\&.mariadb\&.php\fP\&.
.nf
342     {
343         return TplApp::getActionRun(Action::SERVICE, array(BinMariadb::SERVICE_NAME, ActionService::REMOVE)) \&. PHP_EOL \&.
344             TplAppReload::getActionReload();
345     }
.PP
.fi

.PP
References \fBTplAppReload\\getActionReload()\fP, \fBTplApp\\getActionRun()\fP, \fBActionService\\REMOVE\fP, \fBAction\\SERVICE\fP, and \fBBinMariadb\\SERVICE_NAME\fP\&.
.SS "getActionSwitchMariadbVersion ( $version)\fR [static]\fP"
Generates the action to switch the MariaDB version\&.

.PP
This method creates the action string for switching the MariaDB version\&. It uses the global binaries object to retrieve the necessary values\&.

.PP
@global object $bearsamppBins Provides access to system binaries and their configurations\&.

.PP
\fBParameters\fP
.RS 4
\fI$version\fP The version to switch to\&.
.RE
.PP
\fBReturns\fP
.RS 4
string The generated action string for switching the MariaDB version\&. 
.RE
.PP

.PP
Definition at line \fB178\fP of file \fBclass\&.tpl\&.app\&.mariadb\&.php\fP\&.
.nf
179     {
180         global $bearsamppBins;
181 
182         return TplApp::getActionRun(Action::SWITCH_VERSION, array($bearsamppBins\->getMariadb()\->getName(), $version)) \&. PHP_EOL \&.
183             TplAppReload::getActionReload() \&. PHP_EOL;
184     }
.PP
.fi

.PP
References \fB$bearsamppBins\fP, \fBTplAppReload\\getActionReload()\fP, \fBTplApp\\getActionRun()\fP, and \fBAction\\SWITCH_VERSION\fP\&.
.SS "getMenuMariadb ()\fR [static]\fP"
Generates the MariaDB menu items and actions\&.

.PP
This method creates menu items and actions for managing MariaDB, including enabling/disabling, switching versions, managing services, and debugging\&. It uses the global language, binaries, and tools objects to retrieve the necessary values\&.

.PP
@global object $bearsamppBins Provides access to system binaries and their configurations\&. @global object $bearsamppLang Provides language support for retrieving language-specific values\&. @global object $bearsamppTools Provides access to various tools and utilities\&.

.PP
\fBReturns\fP
.RS 4
string The generated MariaDB menu items and actions\&. 
.RE
.PP

.PP
Definition at line \fB55\fP of file \fBclass\&.tpl\&.app\&.mariadb\&.php\fP\&.
.nf
56     {
57         global $bearsamppBins, $bearsamppLang, $bearsamppTools;
58         $resultItems = $resultActions = '';
59 
60         $isEnabled = $bearsamppBins\->getMariadb()\->isEnable();
61 
62         // Download
63         $resultItems \&.= TplAestan::getItemLink( $bearsamppLang\->getValue(Lang::DOWNLOAD_MORE),
64             Util::getWebsiteUrl('module/mariadb', '#releases'),
65             false,
66             TplAestan::GLYPH_BROWSER
67         ) \&. PHP_EOL;
68 
69         // Enable
70         $tplEnable = TplApp::getActionMulti(
71             self::ACTION_ENABLE, array($isEnabled ? Config::DISABLED : Config::ENABLED),
72             array($bearsamppLang\->getValue(Lang::MENU_ENABLE), $isEnabled ? TplAestan::GLYPH_CHECK : ''),
73             false, get_called_class()
74         );
75         $resultItems \&.= $tplEnable[TplApp::SECTION_CALL] \&. PHP_EOL;
76         $resultActions \&.= $tplEnable[TplApp::SECTION_CONTENT] \&. PHP_EOL;
77 
78         if ($isEnabled) {
79             $resultItems \&.= TplAestan::getItemSeparator() \&. PHP_EOL;
80 
81             // Versions
82             $tplVersions = TplApp::getMenu($bearsamppLang\->getValue(Lang::VERSIONS), self::MENU_VERSIONS, get_called_class());
83             $resultItems \&.= $tplVersions[TplApp::SECTION_CALL] \&. PHP_EOL;
84             $resultActions \&.= $tplVersions[TplApp::SECTION_CONTENT] \&. PHP_EOL;
85 
86             // Service
87             $tplService = TplApp::getMenu($bearsamppLang\->getValue(Lang::SERVICE), self::MENU_SERVICE, get_called_class());
88             $resultItems \&.= $tplService[TplApp::SECTION_CALL] \&. PHP_EOL;
89             $resultActions \&.= $tplService[TplApp::SECTION_CONTENT] \&. PHP_EOL;
90 
91             // Debug
92             $tplDebug = TplApp::getMenu($bearsamppLang\->getValue(Lang::DEBUG), self::MENU_DEBUG, get_called_class());
93             $resultItems \&.= $tplDebug[TplApp::SECTION_CALL] \&. PHP_EOL;
94             $resultActions \&.= $tplDebug[TplApp::SECTION_CONTENT];
95 
96             // Console
97             $resultItems \&.= TplAestan::getItemConsoleZ(
98                 $bearsamppLang\->getValue(Lang::CONSOLE),
99                 TplAestan::GLYPH_CONSOLEZ,
100                 $bearsamppTools\->getConsoleZ()\->getTabTitleMariadb()
101             ) \&. PHP_EOL;
102 
103             // Conf
104             $resultItems \&.= TplAestan::getItemNotepad(basename($bearsamppBins\->getMariadb()\->getConf()), $bearsamppBins\->getMariadb()\->getConf()) \&. PHP_EOL;
105 
106             // Errors log
107             $resultItems \&.= TplAestan::getItemNotepad($bearsamppLang\->getValue(Lang::MENU_ERROR_LOGS), $bearsamppBins\->getMariadb()\->getErrorLog()) \&. PHP_EOL;
108         }
109 
110         return $resultItems \&. PHP_EOL \&. $resultActions;
111     }
.PP
.fi

.PP
References \fB$bearsamppBins\fP, \fB$bearsamppLang\fP, \fBLang\\CONSOLE\fP, \fBLang\\DEBUG\fP, \fBConfig\\DISABLED\fP, \fBLang\\DOWNLOAD_MORE\fP, \fBConfig\\ENABLED\fP, \fBTplApp\\getActionMulti()\fP, \fBTplAestan\\getItemConsoleZ()\fP, \fBTplAestan\\getItemLink()\fP, \fBTplAestan\\getItemNotepad()\fP, \fBTplAestan\\getItemSeparator()\fP, \fBTplApp\\getMenu()\fP, \fBUtil\\getWebsiteUrl()\fP, \fBTplAestan\\GLYPH_BROWSER\fP, \fBTplAestan\\GLYPH_CHECK\fP, \fBTplAestan\\GLYPH_CONSOLEZ\fP, \fBLang\\MENU_ENABLE\fP, \fBLang\\MENU_ERROR_LOGS\fP, \fBTplApp\\SECTION_CALL\fP, \fBTplApp\\SECTION_CONTENT\fP, \fBLang\\SERVICE\fP, and \fBLang\\VERSIONS\fP\&.
.SS "getMenuMariadbDebug ()\fR [static]\fP"
Generates the MariaDB debug menu items and actions\&.

.PP
This method creates menu items and actions for debugging MariaDB, including checking the version, variables, and syntax\&. It uses the global language object to retrieve the necessary values\&.

.PP
@global object $bearsamppLang Provides language support for retrieving language-specific values\&.

.PP
\fBReturns\fP
.RS 4
string The generated MariaDB debug menu items and actions\&. 
.RE
.PP

.PP
Definition at line \fB267\fP of file \fBclass\&.tpl\&.app\&.mariadb\&.php\fP\&.
.nf
268     {
269         global $bearsamppLang;
270 
271         return TplApp::getActionRun(
272             Action::DEBUG_MARIADB, array(BinMariadb::CMD_VERSION),
273             array($bearsamppLang\->getValue(Lang::DEBUG_MARIADB_VERSION), TplAestan::GLYPH_DEBUG)
274         ) \&. PHP_EOL \&.
275         TplApp::getActionRun(
276             Action::DEBUG_MARIADB, array(BinMariadb::CMD_VARIABLES),
277             array($bearsamppLang\->getValue(Lang::DEBUG_MARIADB_VARIABLES), TplAestan::GLYPH_DEBUG)
278         ) \&. PHP_EOL \&.
279         TplApp::getActionRun(
280             Action::DEBUG_MARIADB, array(BinMariadb::CMD_SYNTAX_CHECK),
281             array($bearsamppLang\->getValue(Lang::DEBUG_MARIADB_SYNTAX_CHECK), TplAestan::GLYPH_DEBUG)
282         ) \&. PHP_EOL;
283     }
.PP
.fi

.PP
References \fB$bearsamppLang\fP, \fBBinMariadb\\CMD_SYNTAX_CHECK\fP, \fBBinMariadb\\CMD_VARIABLES\fP, \fBBinMariadb\\CMD_VERSION\fP, \fBAction\\DEBUG_MARIADB\fP, \fBLang\\DEBUG_MARIADB_SYNTAX_CHECK\fP, \fBLang\\DEBUG_MARIADB_VARIABLES\fP, \fBLang\\DEBUG_MARIADB_VERSION\fP, \fBTplApp\\getActionRun()\fP, and \fBTplAestan\\GLYPH_DEBUG\fP\&.
.SS "getMenuMariadbService ()\fR [static]\fP"
Generates the MariaDB service menu items and actions\&.

.PP
This method creates menu items and actions for managing the MariaDB service, including starting, stopping, restarting, changing the port, and changing the root password\&. It uses the global language and binaries objects to retrieve the necessary values\&.

.PP
@global object $bearsamppLang Provides language support for retrieving language-specific values\&. @global object $bearsamppBins Provides access to system binaries and their configurations\&.

.PP
\fBReturns\fP
.RS 4
string The generated MariaDB service menu items and actions\&. 
.RE
.PP

.PP
Definition at line \fB198\fP of file \fBclass\&.tpl\&.app\&.mariadb\&.php\fP\&.
.nf
199     {
200         global $bearsamppLang, $bearsamppBins;
201 
202         $tplChangePort = TplApp::getActionMulti(
203             self::ACTION_CHANGE_PORT, null,
204             array($bearsamppLang\->getValue(Lang::MENU_CHANGE_PORT), TplAestan::GLYPH_NETWORK),
205             false, get_called_class()
206         );
207 
208         $isInstalled = $bearsamppBins\->getMariadb()\->getService()\->isInstalled();
209 
210         $result = TplAestan::getItemActionServiceStart($bearsamppBins\->getMariadb()\->getService()\->getName()) \&. PHP_EOL \&.
211             TplAestan::getItemActionServiceStop($bearsamppBins\->getMariadb()\->getService()\->getName()) \&. PHP_EOL \&.
212             TplAestan::getItemActionServiceRestart($bearsamppBins\->getMariadb()\->getService()\->getName()) \&. PHP_EOL \&.
213             TplAestan::getItemSeparator() \&. PHP_EOL \&.
214             TplApp::getActionRun(
215                 Action::CHECK_PORT, array($bearsamppBins\->getMariadb()\->getName(), $bearsamppBins\->getMariadb()\->getPort()),
216                 array(sprintf($bearsamppLang\->getValue(Lang::MENU_CHECK_PORT), $bearsamppBins\->getMariadb()\->getPort()), TplAestan::GLYPH_LIGHT)
217             ) \&. PHP_EOL \&.
218             $tplChangePort[TplApp::SECTION_CALL] \&. PHP_EOL;
219 
220         $tplChangeRootPwd = null;
221         if ($isInstalled) {
222             $tplChangeRootPwd = TplApp::getActionMulti(
223                 self::ACTION_CHANGE_ROOT_PWD, null,
224                 array($bearsamppLang\->getValue(Lang::MENU_CHANGE_ROOT_PWD), TplAestan::GLYPH_PASSWORD),
225                 !$isInstalled, get_called_class()
226             );
227 
228             $result \&.= $tplChangeRootPwd[TplApp::SECTION_CALL] \&. PHP_EOL;
229         }
230 
231         if (!$isInstalled) {
232             $tplInstallService = TplApp::getActionMulti(
233                 self::ACTION_INSTALL_SERVICE, null,
234                 array($bearsamppLang\->getValue(Lang::MENU_INSTALL_SERVICE), TplAestan::GLYPH_SERVICE_INSTALL),
235                 $isInstalled, get_called_class()
236             );
237 
238             $result \&.= $tplInstallService[TplApp::SECTION_CALL] \&. PHP_EOL \&. PHP_EOL \&.
239             $tplInstallService[TplApp::SECTION_CONTENT] \&. PHP_EOL;
240         } else {
241             $tplRemoveService = TplApp::getActionMulti(
242                 self::ACTION_REMOVE_SERVICE, null,
243                 array($bearsamppLang\->getValue(Lang::MENU_REMOVE_SERVICE), TplAestan::GLYPH_SERVICE_REMOVE),
244                 !$isInstalled, get_called_class()
245             );
246 
247             $result \&.= $tplRemoveService[TplApp::SECTION_CALL] \&. PHP_EOL \&. PHP_EOL \&.
248             $tplRemoveService[TplApp::SECTION_CONTENT] \&. PHP_EOL;
249         }
250 
251         $result \&.= $tplChangePort[TplApp::SECTION_CONTENT] \&. PHP_EOL \&.
252             ($tplChangeRootPwd != null ? $tplChangeRootPwd[TplApp::SECTION_CONTENT] \&. PHP_EOL : '');
253 
254         return $result;
255     }
.PP
.fi

.PP
References \fB$bearsamppBins\fP, \fB$bearsamppLang\fP, \fB$result\fP, \fBAction\\CHECK_PORT\fP, \fBTplApp\\getActionMulti()\fP, \fBTplApp\\getActionRun()\fP, \fBTplAestan\\getItemActionServiceRestart()\fP, \fBTplAestan\\getItemActionServiceStart()\fP, \fBTplAestan\\getItemActionServiceStop()\fP, \fBTplAestan\\getItemSeparator()\fP, \fBTplAestan\\GLYPH_LIGHT\fP, \fBTplAestan\\GLYPH_NETWORK\fP, \fBTplAestan\\GLYPH_PASSWORD\fP, \fBTplAestan\\GLYPH_SERVICE_INSTALL\fP, \fBTplAestan\\GLYPH_SERVICE_REMOVE\fP, \fBLang\\MENU_CHANGE_PORT\fP, \fBLang\\MENU_CHANGE_ROOT_PWD\fP, \fBLang\\MENU_CHECK_PORT\fP, \fBLang\\MENU_INSTALL_SERVICE\fP, \fBLang\\MENU_REMOVE_SERVICE\fP, \fBTplApp\\SECTION_CALL\fP, and \fBTplApp\\SECTION_CONTENT\fP\&.
.SS "getMenuMariadbVersions ()\fR [static]\fP"
Generates the MariaDB versions menu items and actions\&.

.PP
This method creates menu items and actions for switching between different MariaDB versions\&. It uses the global binaries object to retrieve the available versions\&.

.PP
@global object $bearsamppBins Provides access to system binaries and their configurations\&.

.PP
\fBReturns\fP
.RS 4
string The generated MariaDB versions menu items and actions\&. 
.RE
.PP

.PP
Definition at line \fB123\fP of file \fBclass\&.tpl\&.app\&.mariadb\&.php\fP\&.
.nf
124     {
125         global $bearsamppBins;
126         $items = '';
127         $actions = '';
128 
129         foreach ($bearsamppBins\->getMariadb()\->getVersionList() as $version) {
130             $tplSwitchMariadbVersion = TplApp::getActionMulti(
131                 self::ACTION_SWITCH_VERSION, array($version),
132                 array($version, $version == $bearsamppBins\->getMariadb()\->getVersion() ? TplAestan::GLYPH_CHECK : ''),
133                 false, get_called_class()
134             );
135 
136             // Item
137             $items \&.= $tplSwitchMariadbVersion[TplApp::SECTION_CALL] \&. PHP_EOL;
138 
139             // Action
140             $actions \&.= PHP_EOL \&. $tplSwitchMariadbVersion[TplApp::SECTION_CONTENT];
141         }
142 
143         return $items \&. $actions;
144     }
.PP
.fi

.PP
References \fB$bearsamppBins\fP, \fBTplApp\\getActionMulti()\fP, \fBTplAestan\\GLYPH_CHECK\fP, \fBTplApp\\SECTION_CALL\fP, and \fBTplApp\\SECTION_CONTENT\fP\&.
.SS "process ()\fR [static]\fP"
Processes the MariaDB menu\&.

.PP
This method generates the MariaDB menu and determines if MariaDB is enabled\&. It uses the global language and binaries objects to retrieve the necessary values\&.

.PP
@global object $bearsamppLang Provides language support for retrieving language-specific values\&. @global object $bearsamppBins Provides access to system binaries and their configurations\&.

.PP
\fBReturns\fP
.RS 4
array The generated MariaDB menu\&. 
.RE
.PP

.PP
Definition at line \fB35\fP of file \fBclass\&.tpl\&.app\&.mariadb\&.php\fP\&.
.nf
36     {
37         global $bearsamppLang, $bearsamppBins;
38 
39         return TplApp::getMenuEnable($bearsamppLang\->getValue(Lang::MARIADB), self::MENU, get_called_class(), $bearsamppBins\->getMariadb()\->isEnable());
40     }
.PP
.fi

.PP
References \fB$bearsamppBins\fP, \fB$bearsamppLang\fP, \fBTplApp\\getMenuEnable()\fP, and \fBLang\\MARIADB\fP\&.
.PP
Referenced by \fBTplApp\\getSectionMenuLeft()\fP\&.
.SH "Field Documentation"
.PP 
.SS "const ACTION_CHANGE_PORT = 'changeMariadbPort'"

.PP
Definition at line \fB19\fP of file \fBclass\&.tpl\&.app\&.mariadb\&.php\fP\&.
.SS "const ACTION_CHANGE_ROOT_PWD = 'changeMariadbRootPwd'"

.PP
Definition at line \fB20\fP of file \fBclass\&.tpl\&.app\&.mariadb\&.php\fP\&.
.SS "const ACTION_ENABLE = 'enableMariadb'"

.PP
Definition at line \fB17\fP of file \fBclass\&.tpl\&.app\&.mariadb\&.php\fP\&.
.SS "const ACTION_INSTALL_SERVICE = 'installMariadbService'"

.PP
Definition at line \fB21\fP of file \fBclass\&.tpl\&.app\&.mariadb\&.php\fP\&.
.SS "const ACTION_REMOVE_SERVICE = 'removeMariadbService'"

.PP
Definition at line \fB22\fP of file \fBclass\&.tpl\&.app\&.mariadb\&.php\fP\&.
.SS "const ACTION_SWITCH_VERSION = 'switchMariadbVersion'"

.PP
Definition at line \fB18\fP of file \fBclass\&.tpl\&.app\&.mariadb\&.php\fP\&.
.SS "const MENU = 'mariadb'"

.PP
Definition at line \fB12\fP of file \fBclass\&.tpl\&.app\&.mariadb\&.php\fP\&.
.SS "const MENU_DEBUG = 'mariadbDebug'"

.PP
Definition at line \fB15\fP of file \fBclass\&.tpl\&.app\&.mariadb\&.php\fP\&.
.SS "const MENU_SERVICE = 'mariadbService'"

.PP
Definition at line \fB14\fP of file \fBclass\&.tpl\&.app\&.mariadb\&.php\fP\&.
.SS "const MENU_VERSIONS = 'mariadbVersions'"

.PP
Definition at line \fB13\fP of file \fBclass\&.tpl\&.app\&.mariadb\&.php\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Bearsampp from the source code\&.
