.TH "ActionEnable" 3 "Version 2025.8.29" "Bearsampp" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ActionEnable
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fB__construct\fP ($args)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Class \fBActionEnable\fP

.PP
This class is responsible for enabling various services (Apache, PHP, MySQL, etc\&.) based on the provided arguments\&. 
.PP
Definition at line \fB15\fP of file \fBclass\&.action\&.enable\&.php\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "__construct ( $args)"
Constructor for the \fBActionEnable\fP class\&.

.PP
\fBParameters\fP
.RS 4
\fI$args\fP An array of arguments where the first element is the service name and the second element is the enable flag\&.
.RE
.PP
@global object $bearsamppBins Global object containing instances of various services\&. 
.PP
Definition at line \fB24\fP of file \fBclass\&.action\&.enable\&.php\fP\&.
.nf
25     {
26         global $bearsamppBins;
27 
28         if ( isset( $args[0] ) && !empty( $args[0] ) && isset( $args[1] ) ) {
29             Util::startLoading();
30             if ( $args[0] == $bearsamppBins\->getApache()\->getName() ) {
31                 $bearsamppBins\->getApache()\->setEnable( $args[1], true );
32             }
33             elseif ( $args[0] == $bearsamppBins\->getPhp()\->getName() ) {
34                 $bearsamppBins\->getPhp()\->setEnable( $args[1], true );
35             }
36             elseif ( $args[0] == $bearsamppBins\->getMysql()\->getName() ) {
37                 $bearsamppBins\->getMysql()\->setEnable( $args[1], true );
38             }
39             elseif ( $args[0] == $bearsamppBins\->getMariadb()\->getName() ) {
40                 $bearsamppBins\->getMariadb()\->setEnable( $args[1], true );
41             }
42             elseif ( $args[0] == $bearsamppBins\->getNodejs()\->getName() ) {
43                 $bearsamppBins\->getNodejs()\->setEnable( $args[1], true );
44             }
45             elseif ( $args[0] == $bearsamppBins\->getPostgresql()\->getName() ) {
46                 $bearsamppBins\->getPostgresql()\->setEnable( $args[1], true );
47             }
48             elseif ( $args[0] == $bearsamppBins\->getMailpit()\->getName() ) {
49                 $bearsamppBins\->getMailpit()\->setEnable( $args[1], true );
50             }
51             elseif ( $args[0] == $bearsamppBins\->getMemcached()\->getName() ) {
52                 $bearsamppBins\->getMemcached()\->setEnable( $args[1], true );
53             }
54             elseif ( $args[0] == $bearsamppBins\->getXlight()\->getName() ) {
55                 $bearsamppBins\->getXlight()\->setEnable( $args[1], true );
56             }
57         }
58     }
.PP
.fi

.PP
References \fB$bearsamppBins\fP, and \fBUtil\\startLoading()\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Bearsampp from the source code\&.
