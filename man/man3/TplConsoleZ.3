.TH "TplConsoleZ" 3 "Version 2025.8.29" "Bearsampp" \" -*- nroff -*-
.ad l
.nh
.SH NAME
TplConsoleZ
.SH SYNOPSIS
.br
.PP
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBprocess\fP ()"
.br
.in -1c
.SS "Data Fields"

.in +1c
.ti -1c
.RI "const \fBICON_APP\fP = 'app\&.ico'"
.br
.ti -1c
.RI "const \fBICON_COMPOSER\fP = 'composer\&.ico'"
.br
.ti -1c
.RI "const \fBICON_DB\fP = 'db\&.ico'"
.br
.ti -1c
.RI "const \fBICON_GHOSTSCRIPT\fP = 'ghostscript\&.ico'"
.br
.ti -1c
.RI "const \fBICON_GIT\fP = 'git\&.ico'"
.br
.ti -1c
.RI "const \fBICON_NGROK\fP = 'ngrok\&.ico'"
.br
.ti -1c
.RI "const \fBICON_NODEJS\fP = 'nodejs\&.ico'"
.br
.ti -1c
.RI "const \fBICON_PEAR\fP = 'pear\&.ico'"
.br
.ti -1c
.RI "const \fBICON_PERL\fP = 'perl\&.ico'"
.br
.ti -1c
.RI "const \fBICON_POWERSHELL\fP = 'powershell\&.ico'"
.br
.ti -1c
.RI "const \fBICON_PYTHON\fP = 'python\&.ico'"
.br
.ti -1c
.RI "const \fBICON_RUBY\fP = 'ruby\&.ico'"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "\fB__construct\fP ()"
.br
.in -1c
.SS "Static Private Member Functions"

.in +1c
.ti -1c
.RI "static \fBgetAppearanceSection\fP ()"
.br
.ti -1c
.RI "static \fBgetBehaviorSection\fP ()"
.br
.ti -1c
.RI "static \fBgetConsoleSection\fP ()"
.br
.ti -1c
.RI "static \fBgetHotkeysSection\fP ()"
.br
.ti -1c
.RI "static \fBgetIncrStr\fP ($size=1)"
.br
.ti -1c
.RI "static \fBgetMouseSection\fP ()"
.br
.ti -1c
.RI "static \fBgetTab\fP ($title, $icon, $shell, $initDir)"
.br
.ti -1c
.RI "static \fBgetTabCmdSection\fP ()"
.br
.ti -1c
.RI "static \fBgetTabComposerSection\fP ()"
.br
.ti -1c
.RI "static \fBgetTabGhostscriptSection\fP ()"
.br
.ti -1c
.RI "static \fBgetTabGitSection\fP ()"
.br
.ti -1c
.RI "static \fBgetTabMariadbSection\fP ()"
.br
.ti -1c
.RI "static \fBgetTabMysqlSection\fP ()"
.br
.ti -1c
.RI "static \fBgetTabNgrokSection\fP ()"
.br
.ti -1c
.RI "static \fBgetTabNodejsSection\fP ()"
.br
.ti -1c
.RI "static \fBgetTabPearSection\fP ()"
.br
.ti -1c
.RI "static \fBgetTabPerlSection\fP ()"
.br
.ti -1c
.RI "static \fBgetTabPostgresqlSection\fP ()"
.br
.ti -1c
.RI "static \fBgetTabPowerShellSection\fP ()"
.br
.ti -1c
.RI "static \fBgetTabPythonSection\fP ()"
.br
.ti -1c
.RI "static \fBgetTabRubySection\fP ()"
.br
.ti -1c
.RI "static \fBgetTabsSection\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
Class \fBTplConsoleZ\fP

.PP
This class is responsible for generating the configuration file for ConsoleZ\&. It includes methods to define various sections of the configuration such as console settings, appearance, behavior, hotkeys, mouse actions, and tabs\&. 
.PP
Definition at line \fB17\fP of file \fBclass\&.tpl\&.consolez\&.php\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "__construct ()\fR [private]\fP"
Private constructor to prevent instantiation\&. 
.PP
Definition at line \fB35\fP of file \fBclass\&.tpl\&.consolez\&.php\fP\&.
.nf
36     {
37     }
.PP
.fi

.SH "Member Function Documentation"
.PP 
.SS "getAppearanceSection ()\fR [static]\fP, \fR [private]\fP"
Generates the XML section for appearance settings\&.

.PP
This method constructs the XML string for the appearance settings of the ConsoleZ configuration\&. It includes settings for font, window properties, controls, styles, position, and transparency\&.

.PP
\fBReturns\fP
.RS 4
string The XML string representing the appearance settings\&. 
.RE
.PP

.PP
Definition at line \fB117\fP of file \fBclass\&.tpl\&.consolez\&.php\fP\&.
.nf
118     {
119         $sectionFont = self::getIncrStr(2) \&. '<font name="Courier New" size="10" bold="0" italic="0" smoothing="0">' \&. PHP_EOL \&.
120             self::getIncrStr(3) \&. '<color use="0" r="0" g="255" b="0"/>' \&. PHP_EOL \&.
121             self::getIncrStr(2) \&. '</font>';
122 
123         $windowSection = self::getIncrStr(2) \&. '<window ' \&.
124             'title="ConsoleZ" ' \&.
125             'icon="" ' \&.
126             'use_tab_icon="1" ' \&.
127             'use_console_title="0" ' \&.
128             'show_cmd="0" ' \&.
129             'show_cmd_tabs="0" ' \&.
130             'use_tab_title="1" ' \&.
131             'trim_tab_titles="20" ' \&.
132             'trim_tab_titles_right="0"/>';
133 
134         $controlsSection = self::getIncrStr(2) \&. '<controls ' \&.
135             'show_menu="0" ' \&.
136             'show_toolbar="1" ' \&.
137             'show_statusbar="1" ' \&.
138             'show_tabs="1" ' \&.
139             'hide_single_tab="1" ' \&.
140             'show_scrollbars="1" ' \&.
141             'flat_scrollbars="0" ' \&.
142             'tabs_on_bottom="0"/>';
143 
144         $stylesSection = self::getIncrStr(2) \&. '<styles caption="1" resizable="1" taskbar_button="1" border="1" inside_border="2" tray_icon="0">' \&. PHP_EOL \&.
145             self::getIncrStr(3) \&. '<selection_color r="255" g="255" b="255"/>' \&. PHP_EOL \&.
146             self::getIncrStr(2) \&. '</styles>';
147 
148         $positionSection = self::getIncrStr(2) \&. '<divosition ' \&.
149             'x="\-1" ' \&.
150             'y="\-1" ' \&.
151             'dock="\-1" ' \&.
152             'snap="0" ' \&.
153             'z_order="0" ' \&.
154             'save_position="0"/>';
155 
156         $transparencySection = self::getIncrStr(2) \&. '<transparency ' \&.
157             'type="1" ' \&.
158             'active_alpha="240" ' \&.
159             'inactive_alpha="225" ' \&.
160             'r="0" ' \&.
161             'g="0" ' \&.
162             'b="0"/>';
163 
164         return self::getIncrStr(1) \&. '<appearance>' \&. PHP_EOL \&.
165             $sectionFont \&. PHP_EOL \&.
166             $windowSection \&. PHP_EOL \&.
167             $controlsSection \&. PHP_EOL \&.
168             $stylesSection \&. PHP_EOL \&.
169             $positionSection \&. PHP_EOL \&.
170             $transparencySection \&. PHP_EOL \&.
171             self::getIncrStr(1) \&. '</appearance>';
172     }
.PP
.fi

.PP
References \fBgetIncrStr()\fP\&.
.PP
Referenced by \fBprocess()\fP\&.
.SS "getBehaviorSection ()\fR [static]\fP, \fR [private]\fP"
Generates the XML section for behavior settings\&.

.PP
This method constructs the XML string for the behavior settings of the ConsoleZ configuration\&. It includes settings for copy-paste behavior, scroll behavior, and tab highlight behavior\&.

.PP
\fBReturns\fP
.RS 4
string The XML string representing the behavior settings\&. 
.RE
.PP

.PP
Definition at line \fB182\fP of file \fBclass\&.tpl\&.consolez\&.php\fP\&.
.nf
183     {
184         $sectionCopyPaste = self::getIncrStr(2) \&. '<copy_paste ' \&.
185             'copy_on_select="0" ' \&.
186             'clear_on_copy="1" ' \&.
187             'no_wrap="1" ' \&.
188             'trim_spaces="1" ' \&.
189             'copy_newline_char="0" ' \&.
190             'sensitive_copy="1"/>';
191 
192         $sectionScroll = self::getIncrStr(2) \&. '<scroll page_scroll_rows="0"/>';
193 
194         $sectionTabHighlight = self::getIncrStr(2) \&. '<tab_highlight flashes="3" stay_highligted="1"/>';
195 
196         return self::getIncrStr(1) \&. '<behavior>' \&. PHP_EOL \&.
197             $sectionCopyPaste \&. PHP_EOL \&.
198             $sectionScroll \&. PHP_EOL \&.
199             $sectionTabHighlight \&. PHP_EOL \&.
200             self::getIncrStr(1) \&. '</behavior>';
201     }
.PP
.fi

.PP
References \fBgetIncrStr()\fP\&.
.PP
Referenced by \fBprocess()\fP\&.
.SS "getConsoleSection ()\fR [static]\fP, \fR [private]\fP"
Generates the XML section for console settings\&.

.PP
This method constructs the XML string for the console settings of the ConsoleZ configuration\&. It includes settings for refresh rates, buffer sizes, and initial directory\&.

.PP
\fBReturns\fP
.RS 4
string The XML string representing the console settings\&. 
.RE
.PP

.PP
Definition at line \fB69\fP of file \fBclass\&.tpl\&.consolez\&.php\fP\&.
.nf
70     {
71         global $bearsamppRoot, $bearsamppTools;
72 
73         $sectionConsoleStart = self::getIncrStr(1) \&. '<console ' \&.
74             'change_refresh="10" ' \&.
75             'refresh="100" ' \&.
76             'rows="' \&. $bearsamppTools\->getConsoleZ()\->getRows() \&. '" ' \&.
77             'columns="' \&. $bearsamppTools\->getConsoleZ()\->getCols() \&. '" ' \&.
78             'buffer_rows="2048" ' \&.
79             'buffer_columns="0" ' \&.
80             'shell="" ' \&.
81             'init_dir="' \&. $bearsamppRoot\->getRootPath() \&. '" ' \&.
82             'start_hidden="0" ' \&.
83             'save_size="0">' \&. PHP_EOL;
84 
85         $sectionColors = self::getIncrStr(2) \&. '<colors>' \&. PHP_EOL \&.
86             self::getIncrStr(3) \&. '<color id="0" r="39" g="40" b="34"/>' \&. PHP_EOL \&.
87             self::getIncrStr(3) \&. '<color id="1" r="88" g="194" b="229"/>' \&. PHP_EOL \&.
88             self::getIncrStr(3) \&. '<color id="2" r="88" g="194" b="229"/>' \&. PHP_EOL \&.
89             self::getIncrStr(3) \&. '<color id="3" r="198" g="197" b="254"/>' \&. PHP_EOL \&.
90             self::getIncrStr(3) \&. '<color id="4" r="168" g="125" b="184"/>' \&. PHP_EOL \&.
91             self::getIncrStr(3) \&. '<color id="5" r="243" g="4" b="75"/>' \&. PHP_EOL \&.
92             self::getIncrStr(3) \&. '<color id="6" r="243" g="4" b="75"/>' \&. PHP_EOL \&.
93             self::getIncrStr(3) \&. '<color id="7" r="238" g="238" b="238"/>' \&. PHP_EOL \&.
94             self::getIncrStr(3) \&. '<color id="8" r="124" g="124" b="124"/>' \&. PHP_EOL \&.
95             self::getIncrStr(3) \&. '<color id="9" r="3" g="131" b="245"/>' \&. PHP_EOL \&.
96             self::getIncrStr(3) \&. '<color id="10" r="141" g="208" b="6"/>' \&. PHP_EOL \&.
97             self::getIncrStr(3) \&. '<color id="11" r="88" g="194" b="229"/>' \&. PHP_EOL \&.
98             self::getIncrStr(3) \&. '<color id="12" r="168" g="125" b="184"/>' \&. PHP_EOL \&.
99             self::getIncrStr(3) \&. '<color id="13" r="243" g="4" b="75"/>' \&. PHP_EOL \&.
100             self::getIncrStr(3) \&. '<color id="14" r="204" g="204" b="129"/>' \&. PHP_EOL \&.
101             self::getIncrStr(3) \&. '<color id="15" r="255" g="255" b="255"/>' \&. PHP_EOL \&.
102             self::getIncrStr(2) \&. '</colors>' \&. PHP_EOL;
103 
104         $sectionConsoleEnd = self::getIncrStr(1) \&. '</console>';
105 
106         return $sectionConsoleStart \&. $sectionColors \&. $sectionConsoleEnd;
107     }
.PP
.fi

.PP
References \fB$bearsamppRoot\fP, and \fBgetIncrStr()\fP\&.
.PP
Referenced by \fBprocess()\fP\&.
.SS "getHotkeysSection ()\fR [static]\fP, \fR [private]\fP"
Generates the XML section for hotkeys settings\&.

.PP
This method constructs the XML string for the hotkeys settings of the ConsoleZ configuration\&. It includes settings for various hotkey combinations and their corresponding commands\&.

.PP
\fBReturns\fP
.RS 4
string The XML string representing the hotkeys settings\&. 
.RE
.PP

.PP
Definition at line \fB211\fP of file \fBclass\&.tpl\&.consolez\&.php\fP\&.
.nf
212     {
213         return self::getIncrStr(1) \&. '<hotkeys use_scroll_lock="0">' \&. PHP_EOL \&.
214             self::getIncrStr(2) \&. '<hotkey ctrl="1" shift="0" alt="0" extended="0" code="83" command="settings"/>' \&. PHP_EOL \&.
215             self::getIncrStr(2) \&. '<hotkey ctrl="0" shift="0" alt="0" extended="0" code="112" command="help"/>' \&. PHP_EOL \&.
216             self::getIncrStr(2) \&. '<hotkey ctrl="0" shift="0" alt="1" extended="0" code="115" command="exit"/>' \&. PHP_EOL \&.
217             self::getIncrStr(2) \&. '<hotkey ctrl="1" shift="0" alt="0" extended="0" code="112" command="newtab1"/>' \&. PHP_EOL \&.
218             self::getIncrStr(2) \&. '<hotkey ctrl="1" shift="0" alt="0" extended="0" code="113" command="newtab2"/>' \&. PHP_EOL \&.
219             self::getIncrStr(2) \&. '<hotkey ctrl="1" shift="0" alt="0" extended="0" code="114" command="newtab3"/>' \&. PHP_EOL \&.
220             self::getIncrStr(2) \&. '<hotkey ctrl="1" shift="0" alt="0" extended="0" code="115" command="newtab4"/>' \&. PHP_EOL \&.
221             self::getIncrStr(2) \&. '<hotkey ctrl="1" shift="0" alt="0" extended="0" code="116" command="newtab5"/>' \&. PHP_EOL \&.
222             self::getIncrStr(2) \&. '<hotkey ctrl="1" shift="0" alt="0" extended="0" code="117" command="newtab6"/>' \&. PHP_EOL \&.
223             self::getIncrStr(2) \&. '<hotkey ctrl="1" shift="0" alt="0" extended="0" code="118" command="newtab7"/>' \&. PHP_EOL \&.
224             self::getIncrStr(2) \&. '<hotkey ctrl="1" shift="0" alt="0" extended="0" code="119" command="newtab8"/>' \&. PHP_EOL \&.
225             self::getIncrStr(2) \&. '<hotkey ctrl="1" shift="0" alt="0" extended="0" code="120" command="newtab9"/>' \&. PHP_EOL \&.
226             self::getIncrStr(2) \&. '<hotkey ctrl="1" shift="0" alt="0" extended="0" code="121" command="newtab10"/>' \&. PHP_EOL \&.
227             self::getIncrStr(2) \&. '<hotkey ctrl="1" shift="0" alt="0" extended="0" code="49" command="switchtab1"/>' \&. PHP_EOL \&.
228             self::getIncrStr(2) \&. '<hotkey ctrl="1" shift="0" alt="0" extended="0" code="50" command="switchtab2"/>' \&. PHP_EOL \&.
229             self::getIncrStr(2) \&. '<hotkey ctrl="1" shift="0" alt="0" extended="0" code="51" command="switchtab3"/>' \&. PHP_EOL \&.
230             self::getIncrStr(2) \&. '<hotkey ctrl="1" shift="0" alt="0" extended="0" code="52" command="switchtab4"/>' \&. PHP_EOL \&.
231             self::getIncrStr(2) \&. '<hotkey ctrl="1" shift="0" alt="0" extended="0" code="53" command="switchtab5"/>' \&. PHP_EOL \&.
232             self::getIncrStr(2) \&. '<hotkey ctrl="1" shift="0" alt="0" extended="0" code="54" command="switchtab6"/>' \&. PHP_EOL \&.
233             self::getIncrStr(2) \&. '<hotkey ctrl="1" shift="0" alt="0" extended="0" code="55" command="switchtab7"/>' \&. PHP_EOL \&.
234             self::getIncrStr(2) \&. '<hotkey ctrl="1" shift="0" alt="0" extended="0" code="56" command="switchtab8"/>' \&. PHP_EOL \&.
235             self::getIncrStr(2) \&. '<hotkey ctrl="1" shift="0" alt="0" extended="0" code="57" command="switchtab9"/>' \&. PHP_EOL \&.
236             self::getIncrStr(2) \&. '<hotkey ctrl="1" shift="0" alt="0" extended="0" code="48" command="switchtab10"/>' \&. PHP_EOL \&.
237             self::getIncrStr(2) \&. '<hotkey ctrl="1" shift="0" alt="0" extended="0" code="9" command="nexttab"/>' \&. PHP_EOL \&.
238             self::getIncrStr(2) \&. '<hotkey ctrl="1" shift="1" alt="0" extended="0" code="9" command="prevtab"/>' \&. PHP_EOL \&.
239             self::getIncrStr(2) \&. '<hotkey ctrl="1" shift="0" alt="0" extended="0" code="87" command="closetab"/>' \&. PHP_EOL \&.
240             self::getIncrStr(2) \&. '<hotkey ctrl="1" shift="0" alt="0" extended="0" code="82" command="renametab"/>' \&. PHP_EOL \&.
241             self::getIncrStr(2) \&. '<hotkey ctrl="1" shift="0" alt="0" extended="1" code="45" command="copy"/>' \&. PHP_EOL \&.
242             self::getIncrStr(2) \&. '<hotkey ctrl="1" shift="0" alt="0" extended="1" code="46" command="clear_selection"/>' \&. PHP_EOL \&.
243             self::getIncrStr(2) \&. '<hotkey ctrl="0" shift="1" alt="0" extended="1" code="45" command="paste"/>' \&. PHP_EOL \&.
244             self::getIncrStr(2) \&. '<hotkey ctrl="0" shift="0" alt="0" extended="0" code="0" command="stopscroll"/>' \&. PHP_EOL \&.
245             self::getIncrStr(2) \&. '<hotkey ctrl="0" shift="0" alt="0" extended="0" code="0" command="scrollrowup"/>' \&. PHP_EOL \&.
246             self::getIncrStr(2) \&. '<hotkey ctrl="0" shift="0" alt="0" extended="0" code="0" command="scrollrowdown"/>' \&. PHP_EOL \&.
247             self::getIncrStr(2) \&. '<hotkey ctrl="0" shift="0" alt="0" extended="0" code="0" command="scrollpageup"/>' \&. PHP_EOL \&.
248             self::getIncrStr(2) \&. '<hotkey ctrl="0" shift="0" alt="0" extended="0" code="0" command="scrollpagedown"/>' \&. PHP_EOL \&.
249             self::getIncrStr(2) \&. '<hotkey ctrl="0" shift="0" alt="0" extended="0" code="0" command="scrollcolleft"/>' \&. PHP_EOL \&.
250             self::getIncrStr(2) \&. '<hotkey ctrl="0" shift="0" alt="0" extended="0" code="0" command="scrollcolright"/>' \&. PHP_EOL \&.
251             self::getIncrStr(2) \&. '<hotkey ctrl="0" shift="0" alt="0" extended="0" code="0" command="scrollpageleft"/>' \&. PHP_EOL \&.
252             self::getIncrStr(2) \&. '<hotkey ctrl="0" shift="0" alt="0" extended="0" code="0" command="scrollpageright"/>' \&. PHP_EOL \&.
253             self::getIncrStr(2) \&. '<hotkey ctrl="1" shift="1" alt="0" extended="0" code="112" command="dumpbuffer"/>' \&. PHP_EOL \&.
254             self::getIncrStr(2) \&. '<hotkey ctrl="0" shift="0" alt="0" extended="0" code="0" command="activate"/>' \&. PHP_EOL \&.
255             self::getIncrStr(1) \&. '</hotkeys>';
256     }
.PP
.fi

.PP
References \fBgetIncrStr()\fP\&.
.PP
Referenced by \fBprocess()\fP\&.
.SS "getIncrStr ( $size = \fR1\fP)\fR [static]\fP, \fR [private]\fP"
Generates a string of incremented tabs\&.

.PP
This function constructs a string consisting of a specified number of tab characters\&.

.PP
\fBParameters\fP
.RS 4
\fI$size\fP The number of tabs to include in the string\&. 
.RE
.PP
\fBReturns\fP
.RS 4
string The string of incremented tabs\&. 
.RE
.PP

.PP
Definition at line \fB744\fP of file \fBclass\&.tpl\&.consolez\&.php\fP\&.
.nf
745     {
746         $result = '';
747         for ($i = 0; $i <= $size; $i++) {
748             $result \&.= RETURN_TAB;
749         }
750         return $result;
751     }
.PP
.fi

.PP
References \fB$result\fP, and \fBRETURN_TAB\fP\&.
.PP
Referenced by \fBgetAppearanceSection()\fP, \fBgetBehaviorSection()\fP, \fBgetConsoleSection()\fP, \fBgetHotkeysSection()\fP, \fBgetMouseSection()\fP, \fBgetTab()\fP, and \fBgetTabsSection()\fP\&.
.SS "getMouseSection ()\fR [static]\fP, \fR [private]\fP"
Generates the XML structure for the mouse section\&.

.PP
This function creates an XML structure defining mouse actions and their corresponding key combinations\&. It uses the \fRgetIncrStr\fP method to format the XML with appropriate indentation\&.

.PP
\fBReturns\fP
.RS 4
string The formatted XML string for the mouse section\&. 
.RE
.PP

.PP
Definition at line \fB267\fP of file \fBclass\&.tpl\&.consolez\&.php\fP\&.
.nf
268     {
269         return self::getIncrStr(1) \&. '<mouse>' \&. PHP_EOL \&.
270             self::getIncrStr(2) \&. '<actions>' \&. PHP_EOL \&.
271             self::getIncrStr(3) \&. '<action ctrl="0" shift="0" alt="0" button="1" name="copy"/>' \&. PHP_EOL \&.
272             self::getIncrStr(3) \&. '<action ctrl="0" shift="1" alt="0" button="1" name="select"/>' \&. PHP_EOL \&.
273             self::getIncrStr(3) \&. '<action ctrl="0" shift="0" alt="0" button="3" name="paste"/>' \&. PHP_EOL \&.
274             self::getIncrStr(3) \&. '<action ctrl="1" shift="0" alt="0" button="1" name="drag"/>' \&. PHP_EOL \&.
275             self::getIncrStr(3) \&. '<action ctrl="0" shift="0" alt="0" button="2" name="menu"/>' \&. PHP_EOL \&.
276             self::getIncrStr(2) \&. '</actions>' \&. PHP_EOL \&.
277             self::getIncrStr(1) \&. '</mouse>';
278     }
.PP
.fi

.PP
References \fBgetIncrStr()\fP\&.
.PP
Referenced by \fBprocess()\fP\&.
.SS "getTab ( $title,  $icon,  $shell,  $initDir)\fR [static]\fP, \fR [private]\fP"
Generates the HTML structure for a tab in the console\&.

.PP
This function constructs the HTML structure for a tab, including the title, icon, shell command, initial directory, cursor style, and background settings\&.

.PP
\fBParameters\fP
.RS 4
\fI$title\fP The title of the tab\&. 
.br
\fI$icon\fP The icon for the tab\&. 
.br
\fI$shell\fP The shell command to be executed in the tab\&. 
.br
\fI$initDir\fP The initial directory for the tab\&. 
.RE
.PP
\fBReturns\fP
.RS 4
string The HTML structure for the tab\&. @global \fBCore\fP $bearsamppCore The core object of the application\&. 
.RE
.PP

.PP
Definition at line \fB722\fP of file \fBclass\&.tpl\&.consolez\&.php\fP\&.
.nf
723     {
724         global $bearsamppCore;
725         return self::getIncrStr(2) \&. '<tab title="' \&. $title \&. '" icon="' \&. $bearsamppCore\->getIconsPath(false) \&. '/' \&. $icon \&. '" use_default_icon="0">' \&. PHP_EOL \&.
726             self::getIncrStr(3) \&. '<console shell="' \&. $shell \&. '" init_dir="' \&. $initDir \&. '" run_as_user="0" user=""/>' \&. PHP_EOL \&.
727             self::getIncrStr(3) \&. '<cursor style="0" r="255" g="255" b="255"/>' \&. PHP_EOL \&.
728             self::getIncrStr(3) \&. '<background type="0" r="0" g="0" b="0">' \&. PHP_EOL \&.
729             self::getIncrStr(4) \&. '<image file="" relative="0" extend="0" position="0">' \&. PHP_EOL \&.
730             self::getIncrStr(5) \&. '<tint opacity="0" r="0" g="0" b="0"/>' \&. PHP_EOL \&.
731             self::getIncrStr(4) \&. '</image>' \&. PHP_EOL \&.
732             self::getIncrStr(3) \&. '</background>' \&. PHP_EOL \&.
733             self::getIncrStr(2) \&. '</tab>';
734     }
.PP
.fi

.PP
References \fB$bearsamppCore\fP, and \fBgetIncrStr()\fP\&.
.PP
Referenced by \fBgetTabCmdSection()\fP, \fBgetTabComposerSection()\fP, \fBgetTabGhostscriptSection()\fP, \fBgetTabGitSection()\fP, \fBgetTabMariadbSection()\fP, \fBgetTabMysqlSection()\fP, \fBgetTabNgrokSection()\fP, \fBgetTabNodejsSection()\fP, \fBgetTabPearSection()\fP, \fBgetTabPerlSection()\fP, \fBgetTabPostgresqlSection()\fP, \fBgetTabPowerShellSection()\fP, \fBgetTabPythonSection()\fP, and \fBgetTabRubySection()\fP\&.
.SS "getTabCmdSection ()\fR [static]\fP, \fR [private]\fP"
Generates the XML structure for the command tab section\&.

.PP
This function creates an XML structure defining the command tab and its configuration\&. It retrieves the tab title and shell command from the ConsoleZ tool and sets the root path\&.

.PP
\fBReturns\fP
.RS 4
string The formatted XML string for the command tab section\&. @global \fBTools\fP $bearsamppTools The tools object of the application\&.
.RE
.PP
@global \fBRoot\fP $bearsamppRoot The root object of the application\&. 
.PP
Definition at line \fB320\fP of file \fBclass\&.tpl\&.consolez\&.php\fP\&.
.nf
321     {
322         global $bearsamppRoot, $bearsamppTools;
323 
324         return self::getTab(
325                 $bearsamppTools\->getConsoleZ()\->getTabTitleDefault(),
326                 self::ICON_APP,
327                 $bearsamppTools\->getConsoleZ()\->getShell(),
328                 $bearsamppRoot\->getRootPath()
329             ) \&. PHP_EOL;
330     }
.PP
.fi

.PP
References \fB$bearsamppRoot\fP, and \fBgetTab()\fP\&.
.PP
Referenced by \fBgetTabsSection()\fP\&.
.SS "getTabComposerSection ()\fR [static]\fP, \fR [private]\fP"
Generates the XML structure for the Composer tab section\&.

.PP
This function creates an XML structure defining the Composer tab and its configuration\&. It retrieves the Composer executable path and sets the WWW path\&.

.PP
\fBReturns\fP
.RS 4
string The formatted XML string for the Composer tab section\&. @global \fBTools\fP $bearsamppTools The tools object of the application\&.
.RE
.PP
@global \fBRoot\fP $bearsamppRoot The root object of the application\&. 
.PP
Definition at line \fB548\fP of file \fBclass\&.tpl\&.consolez\&.php\fP\&.
.nf
549     {
550         global $bearsamppRoot, $bearsamppTools;
551 
552         $shell = $bearsamppTools\->getConsoleZ()\->getShell('&quot;' \&. $bearsamppTools\->getComposer()\->getExe() \&. '&quot; \-V');
553         if (!file_exists($bearsamppTools\->getComposer()\->getExe())) {
554             $shell = $bearsamppTools\->getConsoleZ()\->getShell('echo ' \&. $bearsamppTools\->getComposer()\->getExe() \&. ' not found');
555         }
556 
557         return self::getTab(
558                 $bearsamppTools\->getConsoleZ()\->getTabTitleComposer(),
559                 self::ICON_COMPOSER,
560                 $shell,
561                 $bearsamppRoot\->getWwwPath()
562             ) \&. PHP_EOL;
563     }
.PP
.fi

.PP
References \fB$bearsamppRoot\fP, and \fBgetTab()\fP\&.
.PP
Referenced by \fBgetTabsSection()\fP\&.
.SS "getTabGhostscriptSection ()\fR [static]\fP, \fR [private]\fP"
Generates the tab section for Ghostscript in the console\&.

.PP
This function constructs a shell command to check the version of Ghostscript and verifies if the executable exists\&. If the executable is not found, it returns a message indicating the absence of the executable\&. It then creates a tab section with the appropriate title, icon, shell command, and initial directory\&.

.PP
\fBReturns\fP
.RS 4
string The HTML structure for the Ghostscript tab section\&. @global \fBTools\fP $bearsamppTools The tools object of the application\&. @global \fBRoot\fP $bearsamppRoot The root object of the application\&. 
.RE
.PP

.PP
Definition at line \fB662\fP of file \fBclass\&.tpl\&.consolez\&.php\fP\&.
.nf
663     {
664         global $bearsamppRoot, $bearsamppTools;
665 
666         $shell = $bearsamppTools\->getConsoleZ()\->getShell('&quot;' \&. $bearsamppTools\->getGhostscript()\->getExeConsole() \&. '&quot; \-v');
667         if (!file_exists($bearsamppTools\->getGhostscript()\->getExeConsole())) {
668             $shell = $bearsamppTools\->getConsoleZ()\->getShell('echo ' \&. $bearsamppTools\->getGhostscript()\->getExeConsole() \&. ' not found');
669         }
670 
671         return self::getTab(
672                 $bearsamppTools\->getConsoleZ()\->getTabTitleGhostscript(),
673                 self::ICON_GHOSTSCRIPT,
674                 $shell,
675                 $bearsamppRoot\->getWwwPath()
676             ) \&. PHP_EOL;
677     }
.PP
.fi

.PP
References \fB$bearsamppRoot\fP, and \fBgetTab()\fP\&.
.PP
Referenced by \fBgetTabsSection()\fP\&.
.SS "getTabGitSection ()\fR [static]\fP, \fR [private]\fP"
Generates the XML structure for the Git tab section\&.

.PP
This function creates an XML structure defining the Git tab and its configuration\&. It retrieves the Git executable path and sets the WWW path\&.

.PP
\fBReturns\fP
.RS 4
string The formatted XML string for the Git tab section\&. @global \fBTools\fP $bearsamppTools The tools object of the application\&.
.RE
.PP
@global \fBRoot\fP $bearsamppRoot The root object of the application\&. 
.PP
Definition at line \fB491\fP of file \fBclass\&.tpl\&.consolez\&.php\fP\&.
.nf
492     {
493         global $bearsamppRoot, $bearsamppTools;
494 
495         $shell = $bearsamppTools\->getConsoleZ()\->getShell('&quot;' \&. $bearsamppTools\->getGit()\->getExe() \&. '&quot; \-\-version');
496         if (!file_exists($bearsamppTools\->getGit()\->getExe())) {
497             $shell = $bearsamppTools\->getConsoleZ()\->getShell('echo ' \&. $bearsamppTools\->getGit()\->getExe() \&. ' not found');
498         }
499 
500         return self::getTab(
501                 $bearsamppTools\->getConsoleZ()\->getTabTitleGit(),
502                 self::ICON_GIT,
503                 $shell,
504                 $bearsamppRoot\->getWwwPath()
505             ) \&. PHP_EOL;
506     }
.PP
.fi

.PP
References \fB$bearsamppRoot\fP, and \fBgetTab()\fP\&.
.PP
Referenced by \fBgetTabsSection()\fP\&.
.SS "getTabMariadbSection ()\fR [static]\fP, \fR [private]\fP"
Generates the XML structure for the MariaDB tab section\&.

.PP
This function creates an XML structure defining the MariaDB tab and its configuration\&. It retrieves the MariaDB CLI executable path and sets the symlink path\&.

.PP
\fBReturns\fP
.RS 4
string The formatted XML string for the MariaDB tab section\&. @global \fBTools\fP $bearsamppTools The tools object of the application\&.
.RE
.PP
@global \fBBins\fP $bearsamppBins The bins object of the application\&. 
.PP
Definition at line \fB429\fP of file \fBclass\&.tpl\&.consolez\&.php\fP\&.
.nf
430     {
431         global $bearsamppBins, $bearsamppTools;
432 
433         $shell = $bearsamppTools\->getConsoleZ()\->getShell('&quot;' \&. $bearsamppBins\->getMariadb()\->getCliExe() \&. '&quot; \-u' \&.
434             $bearsamppBins\->getMariadb()\->getRootUser() \&.
435             ($bearsamppBins\->getMariadb()\->getRootPwd() ? ' \-p' : ''));
436         if (!file_exists($bearsamppBins\->getMariadb()\->getCliExe())) {
437             $shell = $bearsamppTools\->getConsoleZ()\->getShell('echo ' \&. $bearsamppBins\->getMariadb()\->getCliExe() \&. ' not found');
438         }
439 
440         return self::getTab(
441                 $bearsamppTools\->getConsoleZ()\->getTabTitleMariadb(),
442                 self::ICON_DB,
443                 $shell,
444                 $bearsamppBins\->getMariadb()\->getSymlinkPath()
445             ) \&. PHP_EOL;
446     }
.PP
.fi

.PP
References \fB$bearsamppBins\fP, and \fBgetTab()\fP\&.
.PP
Referenced by \fBgetTabsSection()\fP\&.
.SS "getTabMysqlSection ()\fR [static]\fP, \fR [private]\fP"
Generates the XML structure for the MySQL tab section\&.

.PP
This function creates an XML structure defining the MySQL tab and its configuration\&. It retrieves the MySQL CLI executable path and sets the symlink path\&.

.PP
\fBReturns\fP
.RS 4
string The formatted XML string for the MySQL tab section\&. @global \fBTools\fP $bearsamppTools The tools object of the application\&.
.RE
.PP
@global \fBBins\fP $bearsamppBins The bins object of the application\&. 
.PP
Definition at line \fB399\fP of file \fBclass\&.tpl\&.consolez\&.php\fP\&.
.nf
400     {
401         global $bearsamppBins, $bearsamppTools;
402 
403         $shell = $bearsamppTools\->getConsoleZ()\->getShell('&quot;' \&. $bearsamppBins\->getMysql()\->getCliExe() \&. '&quot; \-u' \&.
404             $bearsamppBins\->getMysql()\->getRootUser() \&.
405             ($bearsamppBins\->getMysql()\->getRootPwd() ? ' \-p' : ''));
406         if (!file_exists($bearsamppBins\->getMysql()\->getCliExe())) {
407             $shell = $bearsamppTools\->getConsoleZ()\->getShell('echo ' \&. $bearsamppBins\->getMysql()\->getCliExe() \&. ' not found');
408         }
409 
410         return self::getTab(
411                 $bearsamppTools\->getConsoleZ()\->getTabTitleMysql(),
412                 self::ICON_DB,
413                 $shell,
414                 $bearsamppBins\->getMysql()\->getSymlinkPath()
415             ) \&. PHP_EOL;
416     }
.PP
.fi

.PP
References \fB$bearsamppBins\fP, and \fBgetTab()\fP\&.
.PP
Referenced by \fBgetTabsSection()\fP\&.
.SS "getTabNgrokSection ()\fR [static]\fP, \fR [private]\fP"
Generates the tab section for Ngrok in the console\&.

.PP
This function constructs a shell command to check the version of Ngrok and verifies if the executable exists\&. If the executable is not found, it returns a message indicating the absence of the executable\&. It then creates a tab section with the appropriate title, icon, shell command, and initial directory\&.

.PP
\fBReturns\fP
.RS 4
string The HTML structure for the Ngrok tab section\&. @global \fBTools\fP $bearsamppTools The tools object of the application\&. @global \fBRoot\fP $bearsamppRoot The root object of the application\&. 
.RE
.PP

.PP
Definition at line \fB692\fP of file \fBclass\&.tpl\&.consolez\&.php\fP\&.
.nf
693     {
694         global $bearsamppRoot, $bearsamppTools;
695 
696         $shell = $bearsamppTools\->getConsoleZ()\->getShell('&quot;' \&. $bearsamppTools\->getNgrok()\->getExe() \&. '&quot; version');
697         if (!file_exists($bearsamppTools\->getNgrok()\->getExe())) {
698             $shell = $bearsamppTools\->getConsoleZ()\->getShell('echo ' \&. $bearsamppTools\->getNgrok()\->getExe() \&. ' not found');
699         }
700 
701         return self::getTab(
702                 $bearsamppTools\->getConsoleZ()\->getTabTitleNgrok(),
703                 self::ICON_NGROK,
704                 $shell,
705                 $bearsamppRoot\->getWwwPath()
706             ) \&. PHP_EOL;
707     }
.PP
.fi

.PP
References \fB$bearsamppRoot\fP, and \fBgetTab()\fP\&.
.PP
Referenced by \fBgetTabsSection()\fP\&.
.SS "getTabNodejsSection ()\fR [static]\fP, \fR [private]\fP"
Generates the XML structure for the Node\&.js tab section\&.

.PP
This function creates an XML structure defining the Node\&.js tab and its configuration\&. It retrieves the Node\&.js launch path and sets the WWW path\&.

.PP
\fBReturns\fP
.RS 4
string The formatted XML string for the Node\&.js tab section\&. @global \fBBins\fP $bearsamppBins The bins object of the application\&. @global \fBTools\fP $bearsamppTools The tools object of the application\&.
.RE
.PP
@global \fBRoot\fP $bearsamppRoot The root object of the application\&. 
.PP
Definition at line \fB520\fP of file \fBclass\&.tpl\&.consolez\&.php\fP\&.
.nf
521     {
522         global $bearsamppRoot, $bearsamppBins, $bearsamppTools;
523 
524         $shell = $bearsamppTools\->getConsoleZ()\->getShell('&quot;' \&. $bearsamppBins\->getNodejs()\->getLaunch() \&. '&quot;');
525         if (!file_exists($bearsamppBins\->getNodejs()\->getLaunch())) {
526             $shell = $bearsamppTools\->getConsoleZ()\->getShell('echo ' \&. $bearsamppBins\->getNodejs()\->getLaunch() \&. ' not found');
527         }
528 
529         return self::getTab(
530                 $bearsamppTools\->getConsoleZ()\->getTabTitleNodejs(),
531                 self::ICON_NODEJS,
532                 $shell,
533                 $bearsamppRoot\->getWwwPath()
534             ) \&. PHP_EOL;
535     }
.PP
.fi

.PP
References \fB$bearsamppBins\fP, \fB$bearsamppRoot\fP, and \fBgetTab()\fP\&.
.PP
Referenced by \fBgetTabsSection()\fP\&.
.SS "getTabPearSection ()\fR [static]\fP, \fR [private]\fP"
Generates the XML structure for the PEAR tab section\&.

.PP
This function creates an XML structure defining the PEAR tab and its configuration\&. It retrieves the PEAR executable path and sets the symlink path\&.

.PP
\fBReturns\fP
.RS 4
string The formatted XML string for the PEAR tab section\&. @global \fBTools\fP $bearsamppTools The tools object of the application\&.
.RE
.PP
@global \fBBins\fP $bearsamppBins The bins object of the application\&. 
.PP
Definition at line \fB371\fP of file \fBclass\&.tpl\&.consolez\&.php\fP\&.
.nf
372     {
373         global $bearsamppBins, $bearsamppTools;
374 
375         $shell = $bearsamppTools\->getConsoleZ()\->getShell('&quot;' \&. $bearsamppBins\->getPhp()\->getPearExe() \&. '&quot; \-V');
376         if (!file_exists($bearsamppBins\->getPhp()\->getPearExe())) {
377             $shell = $bearsamppTools\->getConsoleZ()\->getShell('echo ' \&. $bearsamppBins\->getPhp()\->getPearExe() \&. ' not found');
378         }
379 
380         return self::getTab(
381                 $bearsamppTools\->getConsoleZ()\->getTabTitlePear(),
382                 self::ICON_PEAR,
383                 $shell,
384                 $bearsamppBins\->getPhp()\->getSymlinkPath() \&. '/pear'
385             ) \&. PHP_EOL;
386     }
.PP
.fi

.PP
References \fB$bearsamppBins\fP, and \fBgetTab()\fP\&.
.PP
Referenced by \fBgetTabsSection()\fP\&.
.SS "getTabPerlSection ()\fR [static]\fP, \fR [private]\fP"
Generates the XML structure for the Perl tab section\&.

.PP
This function creates an XML structure defining the Perl tab and its configuration\&. It retrieves the Perl executable path and sets the WWW path\&.

.PP
\fBReturns\fP
.RS 4
string The formatted XML string for the Perl tab section\&. @global \fBTools\fP $bearsamppTools The tools object of the application\&.
.RE
.PP
@global \fBRoot\fP $bearsamppRoot The root object of the application\&. 
.PP
Definition at line \fB632\fP of file \fBclass\&.tpl\&.consolez\&.php\fP\&.
.nf
633     {
634         global $bearsamppRoot, $bearsamppTools;
635 
636         $shell = $bearsamppTools\->getConsoleZ()\->getShell('&quot;' \&. $bearsamppTools\->getPerl()\->getExe() \&. '&quot; \-v');
637         if (!file_exists($bearsamppTools\->getPerl()\->getExe())) {
638             $shell = $bearsamppTools\->getConsoleZ()\->getShell('echo ' \&. $bearsamppTools\->getPerl()\->getExe() \&. ' not found');
639         }
640 
641         return self::getTab(
642                 $bearsamppTools\->getConsoleZ()\->getTabTitlePerl(),
643                 self::ICON_PERL,
644                 $shell,
645                 $bearsamppRoot\->getWwwPath()
646             ) \&. PHP_EOL;
647     }
.PP
.fi

.PP
References \fB$bearsamppRoot\fP, and \fBgetTab()\fP\&.
.PP
Referenced by \fBgetTabsSection()\fP\&.
.SS "getTabPostgresqlSection ()\fR [static]\fP, \fR [private]\fP"
Generates the XML structure for the PostgreSQL tab section\&.

.PP
This function creates an XML structure defining the PostgreSQL tab and its configuration\&. It retrieves the PostgreSQL CLI executable path and sets the symlink path\&.

.PP
\fBReturns\fP
.RS 4
string The formatted XML string for the PostgreSQL tab section\&. @global \fBTools\fP $bearsamppTools The tools object of the application\&.
.RE
.PP
@global \fBBins\fP $bearsamppBins The bins object of the application\&. 
.PP
Definition at line \fB459\fP of file \fBclass\&.tpl\&.consolez\&.php\fP\&.
.nf
460     {
461         global $bearsamppBins, $bearsamppTools;
462 
463         $shell = $bearsamppTools\->getConsoleZ()\->getShell('&quot;' \&. $bearsamppBins\->getPostgresql()\->getCliExe() \&. '&quot;' \&.
464             ' \-h 127\&.0\&.0\&.1' \&.
465             ' \-p ' \&. $bearsamppBins\->getPostgresql()\->getPort() \&.
466             ' \-U ' \&. $bearsamppBins\->getPostgresql()\->getRootUser() \&.
467             ' \-d postgres');
468         if (!file_exists($bearsamppBins\->getPostgresql()\->getCliExe())) {
469             $shell = $bearsamppTools\->getConsoleZ()\->getShell('echo ' \&. $bearsamppBins\->getPostgresql()\->getCliExe() \&. ' not found');
470         }
471 
472         return self::getTab(
473                 $bearsamppTools\->getConsoleZ()\->getTabTitlePostgresql(),
474                 self::ICON_DB,
475                 $shell,
476                 $bearsamppBins\->getPostgresql()\->getSymlinkPath()
477             ) \&. PHP_EOL;
478     }
.PP
.fi

.PP
References \fB$bearsamppBins\fP, and \fBgetTab()\fP\&.
.PP
Referenced by \fBgetTabsSection()\fP\&.
.SS "getTabPowerShellSection ()\fR [static]\fP, \fR [private]\fP"
Generates the XML structure for the PowerShell tab section\&.

.PP
This function creates an XML structure defining the PowerShell tab and its configuration\&. It retrieves the PowerShell path and sets the root path\&.

.PP
\fBReturns\fP
.RS 4
string The formatted XML string for the PowerShell tab section\&. @global \fBTools\fP $bearsamppTools The tools object of the application\&.
.RE
.PP
@global \fBRoot\fP $bearsamppRoot The root object of the application\&. 
.PP
Definition at line \fB343\fP of file \fBclass\&.tpl\&.consolez\&.php\fP\&.
.nf
344     {
345         global $bearsamppRoot, $bearsamppTools;
346 
347         $powerShellPath = Util::getPowerShellPath();
348         if ($powerShellPath !== false) {
349             return self::getTab(
350                     $bearsamppTools\->getConsoleZ()\->getTabTitlePowershell(),
351                     self::ICON_POWERSHELL,
352                     $powerShellPath,
353                     $bearsamppRoot\->getRootPath()
354                 ) \&. PHP_EOL;
355         }
356 
357         return "";
358     }
.PP
.fi

.PP
References \fB$bearsamppRoot\fP, \fBUtil\\getPowerShellPath()\fP, and \fBgetTab()\fP\&.
.PP
Referenced by \fBgetTabsSection()\fP\&.
.SS "getTabPythonSection ()\fR [static]\fP, \fR [private]\fP"
Generates the XML structure for the Python tab section\&.

.PP
This function creates an XML structure defining the Python tab and its configuration\&. It retrieves the Python executable path and sets the WWW path\&.

.PP
\fBReturns\fP
.RS 4
string The formatted XML string for the Python tab section\&. @global \fBTools\fP $bearsamppTools The tools object of the application\&.
.RE
.PP
@global \fBRoot\fP $bearsamppRoot The root object of the application\&. 
.PP
Definition at line \fB576\fP of file \fBclass\&.tpl\&.consolez\&.php\fP\&.
.nf
577     {
578         global $bearsamppRoot, $bearsamppTools;
579 
580         $shell = $bearsamppTools\->getConsoleZ()\->getShell('&quot;' \&. $bearsamppTools\->getPython()\->getExe() \&. '&quot; \-V');
581         if (!file_exists($bearsamppTools\->getPython()\->getExe())) {
582             $shell = $bearsamppTools\->getConsoleZ()\->getShell('echo ' \&. $bearsamppTools\->getPython()\->getExe() \&. ' not found');
583         }
584 
585         return self::getTab(
586                 $bearsamppTools\->getConsoleZ()\->getTabTitlePython(),
587                 self::ICON_PYTHON,
588                 $shell,
589                 $bearsamppRoot\->getWwwPath()
590             ) \&. PHP_EOL;
591     }
.PP
.fi

.PP
References \fB$bearsamppRoot\fP, and \fBgetTab()\fP\&.
.PP
Referenced by \fBgetTabsSection()\fP\&.
.SS "getTabRubySection ()\fR [static]\fP, \fR [private]\fP"
Generates the XML structure for the Ruby tab section\&.

.PP
This function creates an XML structure defining the Ruby tab and its configuration\&. It retrieves the Ruby executable path and sets the WWW path\&.

.PP
\fBReturns\fP
.RS 4
string The formatted XML string for the Ruby tab section\&. @global \fBTools\fP $bearsamppTools The tools object of the application\&.
.RE
.PP
@global \fBRoot\fP $bearsamppRoot The root object of the application\&. 
.PP
Definition at line \fB604\fP of file \fBclass\&.tpl\&.consolez\&.php\fP\&.
.nf
605     {
606         global $bearsamppRoot, $bearsamppTools;
607 
608         $shell = $bearsamppTools\->getConsoleZ()\->getShell('&quot;' \&. $bearsamppTools\->getRuby()\->getExe() \&. '&quot; \-v');
609         if (!file_exists($bearsamppTools\->getRuby()\->getExe())) {
610             $shell = $bearsamppTools\->getConsoleZ()\->getShell('echo ' \&. $bearsamppTools\->getRuby()\->getExe() \&. ' not found');
611         }
612 
613         return self::getTab(
614                 $bearsamppTools\->getConsoleZ()\->getTabTitleRuby(),
615                 self::ICON_RUBY,
616                 $shell,
617                 $bearsamppRoot\->getWwwPath()
618             ) \&. PHP_EOL;
619     }
.PP
.fi

.PP
References \fB$bearsamppRoot\fP, and \fBgetTab()\fP\&.
.PP
Referenced by \fBgetTabsSection()\fP\&.
.SS "getTabsSection ()\fR [static]\fP, \fR [private]\fP"
Generates the XML structure for the tabs section\&.

.PP
This function creates an XML structure defining various tabs and their configurations\&. It includes multiple tab sections such as command, PowerShell, PEAR, MySQL, MariaDB, PostgreSQL, Ghostscript, Git, Node\&.js, Composer, Perl, Python, Ruby and Ngrok\&.

.PP
\fBReturns\fP
.RS 4
string The formatted XML string for the tabs section\&. 
.RE
.PP

.PP
Definition at line \fB289\fP of file \fBclass\&.tpl\&.consolez\&.php\fP\&.
.nf
290     {
291         return self::getIncrStr(1) \&. '<tabs>' \&. PHP_EOL \&.
292             self::getTabCmdSection() \&.
293             self::getTabPowerShellSection() \&.
294             self::getTabPearSection() \&.
295             self::getTabMysqlSection() \&.
296             self::getTabMariadbSection() \&.
297             self::getTabPostgresqlSection() \&.
298             self::getTabGhostscriptSection() \&.
299             self::getTabGitSection() \&.
300             self::getTabNodejsSection() \&.
301             self::getTabComposerSection() \&.
302             self::getTabPerlSection() \&.
303             self::getTabPythonSection() \&.
304             self::getTabRubySection() \&.
305             self::getTabNgrokSection() \&.
306             self::getIncrStr(1) \&. '</tabs>';
307     }
.PP
.fi

.PP
References \fBgetIncrStr()\fP, \fBgetTabCmdSection()\fP, \fBgetTabComposerSection()\fP, \fBgetTabGhostscriptSection()\fP, \fBgetTabGitSection()\fP, \fBgetTabMariadbSection()\fP, \fBgetTabMysqlSection()\fP, \fBgetTabNgrokSection()\fP, \fBgetTabNodejsSection()\fP, \fBgetTabPearSection()\fP, \fBgetTabPerlSection()\fP, \fBgetTabPostgresqlSection()\fP, \fBgetTabPowerShellSection()\fP, \fBgetTabPythonSection()\fP, and \fBgetTabRubySection()\fP\&.
.PP
Referenced by \fBprocess()\fP\&.
.SS "process ()\fR [static]\fP"
Generates the ConsoleZ configuration file\&.

.PP
This method constructs the XML structure for the ConsoleZ configuration by calling various helper methods to generate different sections of the configuration\&. The resulting XML is then written to the configuration file\&. 
.PP
Definition at line \fB46\fP of file \fBclass\&.tpl\&.consolez\&.php\fP\&.
.nf
47     {
48         global $bearsamppTools;
49         $result = '<?xml version="1\&.0"?>' \&. PHP_EOL \&. '<settings>' \&. PHP_EOL \&.
50             self::getConsoleSection() \&. PHP_EOL \&.
51             self::getAppearanceSection() \&. PHP_EOL \&.
52             self::getBehaviorSection() \&. PHP_EOL \&.
53             self::getHotkeysSection() \&. PHP_EOL \&.
54             self::getMouseSection() \&. PHP_EOL \&.
55             self::getTabsSection() \&. PHP_EOL \&.
56             '</settings>';
57 
58         file_put_contents($bearsamppTools\->getConsoleZ()\->getConf(), $result);
59     }
.PP
.fi

.PP
References \fB$result\fP, \fBgetAppearanceSection()\fP, \fBgetBehaviorSection()\fP, \fBgetConsoleSection()\fP, \fBgetHotkeysSection()\fP, \fBgetMouseSection()\fP, and \fBgetTabsSection()\fP\&.
.PP
Referenced by \fBActionReload\\__construct()\fP\&.
.SH "Field Documentation"
.PP 
.SS "const ICON_APP = 'app\&.ico'"

.PP
Definition at line \fB19\fP of file \fBclass\&.tpl\&.consolez\&.php\fP\&.
.SS "const ICON_COMPOSER = 'composer\&.ico'"

.PP
Definition at line \fB26\fP of file \fBclass\&.tpl\&.consolez\&.php\fP\&.
.SS "const ICON_DB = 'db\&.ico'"

.PP
Definition at line \fB22\fP of file \fBclass\&.tpl\&.consolez\&.php\fP\&.
.SS "const ICON_GHOSTSCRIPT = 'ghostscript\&.ico'"

.PP
Definition at line \fB23\fP of file \fBclass\&.tpl\&.consolez\&.php\fP\&.
.SS "const ICON_GIT = 'git\&.ico'"

.PP
Definition at line \fB24\fP of file \fBclass\&.tpl\&.consolez\&.php\fP\&.
.SS "const ICON_NGROK = 'ngrok\&.ico'"

.PP
Definition at line \fB30\fP of file \fBclass\&.tpl\&.consolez\&.php\fP\&.
.SS "const ICON_NODEJS = 'nodejs\&.ico'"

.PP
Definition at line \fB25\fP of file \fBclass\&.tpl\&.consolez\&.php\fP\&.
.SS "const ICON_PEAR = 'pear\&.ico'"

.PP
Definition at line \fB21\fP of file \fBclass\&.tpl\&.consolez\&.php\fP\&.
.SS "const ICON_PERL = 'perl\&.ico'"

.PP
Definition at line \fB29\fP of file \fBclass\&.tpl\&.consolez\&.php\fP\&.
.SS "const ICON_POWERSHELL = 'powershell\&.ico'"

.PP
Definition at line \fB20\fP of file \fBclass\&.tpl\&.consolez\&.php\fP\&.
.SS "const ICON_PYTHON = 'python\&.ico'"

.PP
Definition at line \fB27\fP of file \fBclass\&.tpl\&.consolez\&.php\fP\&.
.SS "const ICON_RUBY = 'ruby\&.ico'"

.PP
Definition at line \fB28\fP of file \fBclass\&.tpl\&.consolez\&.php\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Bearsampp from the source code\&.
