.TH "ActionExec" 3 "Version 2025.8.29" "Bearsampp" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ActionExec
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fB__construct\fP ($args)"
.br
.in -1c
.SS "Data Fields"

.in +1c
.ti -1c
.RI "const \fBQUIT\fP = 'quit'"
.br
.ti -1c
.RI "const \fBRESTART\fP = 'restart'"
.br
.in -1c
.SH "Detailed Description"
.PP 
Class \fBActionExec\fP

.PP
This class handles the execution of specific actions based on the content of a file\&. The actions include quitting the application or reloading it\&. The actions are read from a file whose path is provided by the global \fR$bearsamppCore\fP object\&. 
.PP
Definition at line \fB18\fP of file \fBclass\&.action\&.exec\&.php\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "__construct ( $args)"
\fBActionExec\fP constructor\&.

.PP
This constructor reads the action from a file specified by \fR$bearsamppCore->getExec()\fP\&. If the action is 'quit', it calls \fR\fBBatch\\exitApp()\fP\fP\&. If the action is 'restart', it calls \fR\fBBatch\\restartApp()\fP\fP\&. After executing the action, it deletes the action file\&.

.PP
\fBParameters\fP
.RS 4
\fI$args\fP Arguments passed to the constructor (not used in the current implementation)\&. 
.RE
.PP

.PP
Definition at line \fB39\fP of file \fBclass\&.action\&.exec\&.php\fP\&.
.nf
40     {
41         global $bearsamppCore;
42 
43         Util::logTrace('ActionExec constructor called');
44 
45         $execFile = $bearsamppCore\->getExec();
46         Util::logTrace('Checking for exec file: ' \&. $execFile);
47 
48         if (file_exists($execFile)) {
49             Util::logTrace('Exec file exists');
50 
51             $action = file_get_contents($execFile);
52             Util::logTrace('Action read from exec file: "' \&. $action \&. '"');
53 
54             if ($action == self::QUIT) {
55                 Util::logTrace('Executing quit action');
56                 Batch::exitApp();
57             } elseif ($action == self::RESTART) {
58                 Util::logTrace('Executing restart action');
59                 Batch::restartApp();
60             } else {
61                 Util::logTrace('Unknown action: "' \&. $action \&. '"');
62             }
63 
64             Util::logTrace('Deleting exec file');
65             $unlinkResult = @unlink($execFile);
66             Util::logTrace('Unlink result: ' \&. ($unlinkResult ? 'success' : 'failed'));
67         } else {
68             Util::logTrace('Exec file does not exist: ' \&. $execFile);
69         }
70     }
.PP
.fi

.PP
References \fB$bearsamppCore\fP, \fBBatch\\exitApp()\fP, \fBUtil\\logTrace()\fP, and \fBBatch\\restartApp()\fP\&.
.SH "Field Documentation"
.PP 
.SS "const QUIT = 'quit'"
Constant representing the 'quit' action\&. 
.PP
Definition at line \fB23\fP of file \fBclass\&.action\&.exec\&.php\fP\&.
.SS "const RESTART = 'restart'"
Constant representing the 'reload' action\&. 
.PP
Definition at line \fB28\fP of file \fBclass\&.action\&.exec\&.php\fP\&.
.PP
Referenced by \fBActionManualRestart\\__construct()\fP, \fBActionStartup\\processWindow()\fP, and \fBActionSwitchVersion\\processWindow()\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Bearsampp from the source code\&.
